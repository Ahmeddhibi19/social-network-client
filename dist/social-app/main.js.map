{"version":3,"file":"main.js","mappings":"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":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/app-constants.ts","./src/app/common/app-date-formats.ts","./src/app/common/repeat-password-matcher.ts","./src/app/component/comment-like-dialog/comment-like-dialog.component.ts","./src/app/component/comment-like-dialog/comment-like-dialog.component.html","./src/app/component/confirmation-dialog/confirmation-dialog.component.ts","./src/app/component/confirmation-dialog/confirmation-dialog.component.html","./src/app/component/error-page/error-page.component.ts","./src/app/component/error-page/error-page.component.html","./src/app/component/following-follower-list-dialog/following-follower-list-dialog.component.ts","./src/app/component/following-follower-list-dialog/following-follower-list-dialog.component.html","./src/app/component/forgot-password-dialog/forgot-password-dialog.component.ts","./src/app/component/forgot-password-dialog/forgot-password-dialog.component.html","./src/app/component/header/header.component.ts","./src/app/component/header/header.component.html","./src/app/component/login/login.component.ts","./src/app/component/login/login.component.html","./src/app/component/logout/logout.component.ts","./src/app/component/logout/logout.component.html","./src/app/component/message/message.component.ts","./src/app/component/message/message.component.html","./src/app/component/photo-upload-dialog/photo-upload-dialog.component.ts","./src/app/component/photo-upload-dialog/photo-upload-dialog.component.html","./src/app/component/post-comment-dialog/post-comment-dialog.component.ts","./src/app/component/post-comment-dialog/post-comment-dialog.component.html","./src/app/component/post-detail/post-detail.component.ts","./src/app/component/post-detail/post-detail.component.html","./src/app/component/post-dialog/post-dialog.component.ts","./src/app/component/post-dialog/post-dialog.component.html","./src/app/component/post-like-dialog/post-like-dialog.component.ts","./src/app/component/post-like-dialog/post-like-dialog.component.html","./src/app/component/post-share-dialog/post-share-dialog.component.ts","./src/app/component/post-share-dialog/post-share-dialog.component.html","./src/app/component/post/post.component.ts","./src/app/component/post/post.component.html","./src/app/component/profile/profile.component.ts","./src/app/component/profile/profile.component.html","./src/app/component/reset-password/reset-password.component.ts","./src/app/component/reset-password/reset-password.component.html","./src/app/component/search-dialog/search-dialog.component.ts","./src/app/component/search-dialog/search-dialog.component.html","./src/app/component/settings/settings.component.ts","./src/app/component/settings/settings.component.html","./src/app/component/share-confirm-dialog/share-confirm-dialog.component.ts","./src/app/component/share-confirm-dialog/share-confirm-dialog.component.html","./src/app/component/signup/signup.component.ts","./src/app/component/signup/signup.component.html","./src/app/component/snackbar/snackbar.component.ts","./src/app/component/snackbar/snackbar.component.html","./src/app/component/tag-dialog/tag-dialog.component.ts","./src/app/component/tag-dialog/tag-dialog.component.html","./src/app/component/timeline/timeline.component.ts","./src/app/component/timeline/timeline.component.html","./src/app/component/verify-email/verify-email.component.ts","./src/app/component/verify-email/verify-email.component.html","./src/app/component/view-photo-dialog/view-photo-dialog.component.ts","./src/app/component/view-photo-dialog/view-photo-dialog.component.html","./src/app/component/waiting-dialog/waiting-dialog.component.ts","./src/app/component/waiting-dialog/waiting-dialog.component.html","./src/app/guard/auth.guard.ts","./src/app/interceptor/auth.interceptor.ts","./src/app/model/comment.ts","./src/app/model/post.ts","./src/app/model/reset-password.ts","./src/app/model/update-user-email.ts","./src/app/model/update-user-info.ts","./src/app/model/update-user-password.ts","./src/app/model/user-login.ts","./src/app/model/user-signup.ts","./src/app/service/auth.service.ts","./src/app/service/comment.service.ts","./src/app/service/country.service.ts","./src/app/service/notification.service.ts","./src/app/service/post.service.ts","./src/app/service/timeline.service.ts","./src/app/service/user.service.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/moment/locale|sync|/^/.*$"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './component/login/login.component';\r\nimport { LogoutComponent } from './component/logout/logout.component';\r\nimport { MessageComponent } from './component/message/message.component';\r\nimport { PostDetailComponent } from './component/post-detail/post-detail.component';\r\nimport { ProfileComponent } from './component/profile/profile.component';\r\nimport { ResetPasswordComponent } from './component/reset-password/reset-password.component';\r\nimport { SettingsComponent } from './component/settings/settings.component';\r\nimport { SignupComponent } from './component/signup/signup.component';\r\nimport { TimelineComponent } from './component/timeline/timeline.component';\r\nimport { VerifyEmailComponent } from './component/verify-email/verify-email.component';\r\n\r\nconst routes: Routes = [\r\n\t{ path: '', component: TimelineComponent },\r\n\t{ path: 'posts/tags/:tagName', component: TimelineComponent },\r\n\t{ path: 'profile', component: ProfileComponent },\r\n\t{ path: 'users/:userId', component: ProfileComponent },\r\n\t{ path: 'signup', component: SignupComponent },\r\n\t{ path: 'login', component: LoginComponent },\r\n\t{ path: 'logout', component: LogoutComponent },\r\n\t{ path: 'settings', component: SettingsComponent },\r\n\t{ path: 'verify-email/:token', component: VerifyEmailComponent },\r\n\t{ path: 'reset-password/:token', component: ResetPasswordComponent },\r\n\t{ path: 'posts/:postId', component: PostDetailComponent },\r\n\t{ path: 'message', component: MessageComponent },\r\n\t{ path: '**', redirectTo: '/login', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'social-app';\r\n}\r\n","<app-header></app-header>\r\n\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatRippleModule, MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatMomentDateModule } from \"@angular/material-moment-adapter\";\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthInterceptor } from './interceptor/auth.interceptor';\r\nimport { AuthGuard } from './guard/auth.guard';\r\nimport { LoginComponent } from './component/login/login.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HeaderComponent } from './component/header/header.component';\r\nimport { SignupComponent } from './component/signup/signup.component';\r\nimport { ProfileComponent } from './component/profile/profile.component';\r\nimport { TimelineComponent } from './component/timeline/timeline.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LogoutComponent } from './component/logout/logout.component';\r\nimport { VerifyEmailComponent } from './component/verify-email/verify-email.component';\r\nimport { MessageComponent } from './component/message/message.component';\r\nimport { ErrorPageComponent } from './component/error-page/error-page.component';\r\nimport { PostComponent } from './component/post/post.component';\r\nimport { PostLikeDialogComponent } from './component/post-like-dialog/post-like-dialog.component';\r\nimport { PostShareDialogComponent } from './component/post-share-dialog/post-share-dialog.component';\r\nimport { PostCommentDialogComponent } from './component/post-comment-dialog/post-comment-dialog.component';\r\nimport { CommentLikeDialogComponent } from './component/comment-like-dialog/comment-like-dialog.component';\r\nimport { ConfirmationDialogComponent } from './component/confirmation-dialog/confirmation-dialog.component';\r\nimport { ShareConfirmDialogComponent } from './component/share-confirm-dialog/share-confirm-dialog.component';\r\nimport { SnackbarComponent } from './component/snackbar/snackbar.component';\r\nimport { FollowingFollowerListDialogComponent } from './component/following-follower-list-dialog/following-follower-list-dialog.component';\r\nimport { ViewPhotoDialogComponent } from './component/view-photo-dialog/view-photo-dialog.component';\r\nimport { PostDialogComponent } from './component/post-dialog/post-dialog.component';\r\nimport { PostDetailComponent } from './component/post-detail/post-detail.component';\r\nimport { WaitingDialogComponent } from './component/waiting-dialog/waiting-dialog.component';\r\nimport { SettingsComponent } from './component/settings/settings.component';\r\nimport { APP_DATE_FORMATS } from './common/app-date-formats';\r\nimport { SearchDialogComponent } from './component/search-dialog/search-dialog.component';\r\nimport { PhotoUploadDialogComponent } from './component/photo-upload-dialog/photo-upload-dialog.component';\r\nimport { TagDialogComponent } from './component/tag-dialog/tag-dialog.component';\r\nimport { ForgotPasswordDialogComponent } from './component/forgot-password-dialog/forgot-password-dialog.component';\r\nimport { ResetPasswordComponent } from './component/reset-password/reset-password.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tLoginComponent,\r\n\t\tHeaderComponent,\r\n\t\tSignupComponent,\r\n\t\tProfileComponent,\r\n\t\tTimelineComponent,\r\n\t\tLogoutComponent,\r\n\t\tVerifyEmailComponent,\r\n\t\tMessageComponent,\r\n\t\tErrorPageComponent,\r\n\t\tPostComponent,\r\n\t\tPostLikeDialogComponent,\r\n\t\tPostShareDialogComponent,\r\n\t\tPostCommentDialogComponent,\r\n\t\tCommentLikeDialogComponent,\r\n\t\tConfirmationDialogComponent,\r\n\t\tShareConfirmDialogComponent,\r\n\t\tSnackbarComponent,\r\n\t\tFollowingFollowerListDialogComponent,\r\n\t\tViewPhotoDialogComponent,\r\n\t\tPostDialogComponent,\r\n\t\tPostDetailComponent,\r\n\t\tWaitingDialogComponent,\r\n\t\tSettingsComponent,\r\n  SearchDialogComponent,\r\n  PhotoUploadDialogComponent,\r\n  TagDialogComponent,\r\n  ForgotPasswordDialogComponent,\r\n  ResetPasswordComponent\r\n\t],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tAppRoutingModule,\r\n\t\tHttpClientModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatToolbarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatMenuModule,\r\n\t\tMatCardModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatProgressBarModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tMatDividerModule,\r\n\t\tMatListModule,\r\n\t\tMatTooltipModule,\r\n\t\tMatChipsModule,\r\n\t\tMatBadgeModule,\r\n\t\tMatDialogModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatRippleModule,\r\n\t\tMatTabsModule,\r\n\t\tMatSelectModule,\r\n\t\tMatRadioModule,\r\n\t\tMatDatepickerModule,\r\n\t\tMatNativeDateModule,\r\n\t\tMatMomentDateModule\r\n\t],\r\n\tproviders: [\r\n\t\tAuthGuard,\r\n\t\t{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n\t\t{ provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS }\r\n\t],\r\n\tbootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class AppConstants {\r\n\tstatic messageTypeLabel = 'messageType';\r\n\tstatic messageHeaderLabel = 'messageHeader';\r\n\tstatic messageDetailLabel = 'messageDetail';\r\n\r\n\tstatic errorLabel = 'error';\r\n\tstatic successLabel = 'success';\r\n\r\n\tstatic toSignupLabel = 'toSignup';\r\n\tstatic toLoginLabel = 'toLogin';\r\n\r\n\tstatic trueLabel = 'true';\r\n\tstatic falseLabel = 'false';\r\n\r\n\tstatic signupSuccessHeader = \"Registration Successful\";\r\n\tstatic signupSuccessDetail = \"Your account has been successfully created. A confirmation email has been sent to your email address. Please, verify.\";\r\n\r\n\tstatic emailVerifySuccessHeader = \"Email Verified\";\r\n\tstatic emailVerifySuccessDetail = \"Your email has been verified successfully.\";\r\n\r\n\tstatic emailChangeSuccessHeader = \"Email Changed Successfully | Verify\";\r\n\tstatic emailChangeSuccessDetail = \"Your email has been changed successfully. A confirmation email has been sent to your email address. Please, verify.\";\r\n\r\n\tstatic forgotPasswordSuccessHeader = \"Email Sent\";\r\n\tstatic forgotPasswordSuccessDetail = \"An email has been sent to the given email address if it exist in our database. Please, verify.\";\r\n\r\n\tstatic passwordChangeSuccessHeader = \"Password Changed Successfully\";\r\n\tstatic passwordChangeSuccessDetail = \"Your password has been changed successfully. Please, login with your new password.\";\r\n\r\n\tstatic tokenErrorHeader = 'Token Invalid or Expired';\r\n\tstatic tokenErrorDetail = 'Token is invalid or has been expired. Please, try again later.';\r\n\r\n\tstatic notFoundErrorHeader = '404 Not Found';\r\n\tstatic notFoundErrorDetail = 'What you are looking for does not exist.';\r\n\r\n\tstatic snackbarErrorContent = 'Could not perform the task. Please, try again later.';\r\n}\r\n","export const APP_DATE_FORMATS = {\r\n    parse: {\r\n        dateInput: 'DD-MM-YYYY',\r\n    },\r\n    display: {\r\n        dateInput: 'MMM DD, YYYY',\r\n        monthYearLabel: 'MMMM YYYY',\r\n        dateA11yLabel: 'LL',\r\n        monthYearA11yLabel: 'MMMM YYYY'\r\n    }\r\n}","import { FormControl, FormGroupDirective, NgForm } from \"@angular/forms\";\r\nimport { ErrorStateMatcher } from \"@angular/material/core\";\r\n\r\nexport class RepeatPasswordMatcher implements ErrorStateMatcher {\r\n\tisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n\t\treturn (control && control.parent.get('password').value !== control.parent.get('passwordRepeat').value && control.dirty);\r\n\t}\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Inject, OnInit, OnDestroy } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { Comment } from 'src/app/model/comment';\r\nimport { User } from 'src/app/model/user';\r\nimport { CommentService } from 'src/app/service/comment.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-comment-like-dialog',\r\n\ttemplateUrl: './comment-like-dialog.component.html',\r\n\tstyleUrls: ['./comment-like-dialog.component.css']\r\n})\r\nexport class CommentLikeDialogComponent implements OnInit, OnDestroy {\r\n\tlikeList: User[] = [];\r\n\tresultPage: number = 1;\r\n\tresultSize: number = 1;\r\n\thasMoreResult: boolean = false;\r\n\tfetchingResult: boolean = false;\r\n\tdefaultProfilePhotoUrl = environment.defaultProfilePhotoUrl;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\t@Inject(MAT_DIALOG_DATA) public dataComment: Comment,\r\n\t\tprivate commentService: CommentService,\r\n\t\tprivate matSnackbar: MatSnackBar) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.loadCommentLikes(1);\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\tloadCommentLikes(currentPage: number): void {\r\n\t\tif (this.dataComment.likeCount > 0) {\r\n\t\t\tthis.fetchingResult = true;\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.commentService.getCommentLikes(this.dataComment.id, currentPage, this.resultSize).subscribe({\r\n\t\t\t\t\tnext: (resultList: User[]) => {\r\n\t\t\t\t\t\tresultList.forEach(like => this.likeList.push(like));\r\n\t\t\t\t\t\tif (currentPage * this.resultSize < this.dataComment.likeCount) {\r\n\t\t\t\t\t\t\tthis.hasMoreResult = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.hasMoreResult = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.resultPage++;\r\n\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n","<mat-dialog-content>\r\n\t<div class=\"position-relative\">\r\n\t\t<h2 class=\"mat-h2 m-0\">\r\n\t\t\t{{ dataComment.likeCount > 0 ? 'Likes(' + dataComment.likeCount + ')' : 'No Likes' }}\r\n\t\t</h2>\r\n\t\t<hr class=\"divider\" *ngIf=\"dataComment.likeCount > 0\">\r\n\t\t<ul class=\"list-group list-group-flush\" *ngFor=\"let like of likeList\">\r\n\t\t\t<li class=\"list-group-item ps-0 pt-2 pe-0 pb-2\">\r\n\t\t\t\t<span class=\"rounded-circle d-inline-block align-middle centered-bg-image\"\r\n\t\t\t\t\tstyle=\"width: 30px; height: 30px; background-image: url('{{like.profilePhoto ? like.profilePhoto : defaultProfilePhotoUrl}}');\">\r\n\t\t\t\t</span>\r\n\t\t\t\t<a class=\"d-inline-block text-decoration-none text-dark align-middle ps-2 fw-500 cursor-pointer\"\r\n\t\t\t\t\thref=\"/users/{{like.id}}\">{{like.firstName + ' ' + like.lastName}}</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\r\n\t\t<div class=\"mt-3 mb-3\" *ngIf=\"hasMoreResult\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"rounded-pill align-middle\" *ngIf=\"hasMoreResult\" (click)=\"loadCommentLikes(resultPage)\">Load More</button>\r\n\t\t\t<div *ngIf=\"fetchingResult && resultPage > 1\" class=\"d-inline-block float-end\">\r\n\t\t\t\t<mat-spinner style=\"zoom: 0.3;\"></mat-spinner>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\r\n\t\t<div *ngIf=\"fetchingResult && resultPage === 1\" class=\"position-absolute\" style=\"top: 0; right: 0;\">\r\n\t\t\t<mat-spinner style=\"zoom: 0.3;\"></mat-spinner>\r\n\t\t</div>\r\n\t</div>\r\n</mat-dialog-content>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n\tselector: 'app-confirmation-dialog',\r\n\ttemplateUrl: './confirmation-dialog.component.html',\r\n\tstyleUrls: ['./confirmation-dialog.component.css']\r\n})\r\nexport class ConfirmationDialogComponent implements OnInit {\r\n\r\n\tconstructor(@Inject(MAT_DIALOG_DATA) public dataHeader: string) { }\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n}\r\n","<mat-dialog-content>\r\n\t<h2 class=\"mat-h2 m-0\">\r\n\t\t{{ dataHeader }}\r\n\t</h2>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n\t<button mat-button mat-dialog-close>Cancel</button>\r\n\t<button mat-raised-button color=\"primary\" [mat-dialog-close]=\"true\" cdkFocusInitial>Confirm</button>\r\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error-page',\r\n  templateUrl: './error-page.component.html',\r\n  styleUrls: ['./error-page.component.css']\r\n})\r\nexport class ErrorPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>error-page works!</p>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { UserResponse } from 'src/app/model/user-response';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-following-follower-list-dialog',\r\n\ttemplateUrl: './following-follower-list-dialog.component.html',\r\n\tstyleUrls: ['./following-follower-list-dialog.component.css']\r\n})\r\nexport class FollowingFollowerListDialogComponent implements OnInit {\r\n\tuserResponseList: UserResponse[] = [];\r\n\tresultPage: number = 1;\r\n\tresultSize: number = 5;\r\n\thasMoreResult: boolean = false;\r\n\tfetchingResult: boolean = false;\r\n\tdefaultProfilePhotoUrl = environment.defaultProfilePhotoUrl;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,\r\n\t\tprivate userService: UserService,\r\n\t\tprivate matSnackbar: MatSnackBar) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.loadUsers(1);\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\tloadUsers(currentPage: number): void {\r\n\t\tif (!this.fetchingResult) {\r\n\t\t\tif (this.data.type === 'following') {\r\n\t\t\t\tif (this.data.user.followingCount > 0) {\r\n\t\t\t\t\tthis.fetchingResult = true;\r\n\t\r\n\t\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\t\tthis.userService.getUserFollowingList(this.data.user.id, currentPage, this.resultSize).subscribe({\r\n\t\t\t\t\t\t\tnext: (followingList: UserResponse[]) => {\r\n\t\t\t\t\t\t\t\tfollowingList.forEach(uR => this.userResponseList.push(uR));\r\n\t\t\t\t\t\t\t\tif (currentPage * this.resultSize < this.data.user.followingCount) {\r\n\t\t\t\t\t\t\t\t\tthis.hasMoreResult = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.hasMoreResult = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.resultPage++;\r\n\t\t\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} else if (this.data.type === 'follower') {\r\n\t\t\t\tif (this.data.user.followerCount > 0) {\r\n\t\t\t\t\tthis.fetchingResult = true;\r\n\t\r\n\t\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\t\tthis.userService.getUserFollowerList(this.data.user.id, currentPage, this.resultSize).subscribe({\r\n\t\t\t\t\t\t\tnext: (followerList: UserResponse[]) => {\r\n\t\t\t\t\t\t\t\tfollowerList.forEach(uR => this.userResponseList.push(uR));\r\n\t\t\t\t\t\t\t\tif (currentPage * this.resultSize < this.data.user.followerCount) {\r\n\t\t\t\t\t\t\t\t\tthis.hasMoreResult = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.hasMoreResult = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.resultPage++;\r\n\t\t\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","<mat-dialog-content>\r\n\t<div class=\"position-relative\">\r\n\t\t<h2 class=\"mat-h2 m-0\" *ngIf=\"data.type === 'following'\">\r\n\t\t\t{{ data.user.followingCount > 0 ? 'Following(' + data.user.followingCount + ')' : '0 Following' }}\r\n\t\t</h2>\r\n\t\t<h2 class=\"mat-h2 m-0\" *ngIf=\"data.type === 'follower'\">\r\n\t\t\t{{ data.user.followerCount > 0 ? 'Follower(' + data.user.followerCount + ')' : '0 Follower' }}\r\n\t\t</h2>\r\n\t\r\n\t\t<hr class=\"divider\" *ngIf=\"userResponseList.length > 0\">\r\n\t\r\n\t\t<ul class=\"list-group list-group-flush\" *ngFor=\"let userResponse of userResponseList\">\r\n\t\t\t<li class=\"list-group-item ps-0 pt-2 pe-0 pb-2\">\r\n\t\t\t\t<span class=\"rounded-circle d-inline-block align-middle centered-bg-image\"\r\n\t\t\t\t\tstyle=\"width: 30px; height: 30px; background-image: url('{{userResponse.user.profilePhoto ? userResponse.user.profilePhoto : defaultProfilePhotoUrl}}');\">\r\n\t\t\t\t</span>\r\n\t\t\t\t<a class=\"d-inline-block text-decoration-none text-dark align-middle ps-2 fw-500 cursor-pointer\"\r\n\t\t\t\t\thref=\"/users/{{userResponse.user.id}}\">{{userResponse.user.firstName + ' ' + userResponse.user.lastName}}</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\r\n\t\t<div class=\"mt-3 mb-3 text-center\" *ngIf=\"hasMoreResult\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"rounded-pill align-middle\" *ngIf=\"hasMoreResult && !(fetchingResult && resultPage > 1)\" (click)=\"loadUsers(resultPage)\">Load More</button>\r\n\t\t\t<div *ngIf=\"fetchingResult && resultPage > 1\" class=\"d-inline-block\" style=\"transform: scale(0.3); margin-top: -33px;\">\r\n\t\t\t\t<mat-spinner style=\"margin: 0 auto;\"></mat-spinner>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\r\n\t\t<div *ngIf=\"fetchingResult && resultPage === 1\" class=\"position-absolute\" style=\"transform: scale(0.3); top: -35px; right: -35px;\">\r\n\t\t\t<mat-spinner></mat-spinner>\r\n\t\t</div>\r\n\t</div>\r\n</mat-dialog-content>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-forgot-password-dialog',\r\n\ttemplateUrl: './forgot-password-dialog.component.html',\r\n\tstyleUrls: ['./forgot-password-dialog.component.css']\r\n})\r\nexport class ForgotPasswordDialogComponent implements OnInit, OnDestroy {\r\n\tforgotPasswordFormGroup: FormGroup;\r\n\tfetchingResult: boolean = false;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate userService: UserService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate matSnackbar: MatSnackBar,\r\n\t\tprivate thisDialogRef: MatDialogRef<ForgotPasswordDialogComponent>,\r\n\t\tprivate router: Router) { }\r\n\r\n\tget email() { return this.forgotPasswordFormGroup.get('email'); }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.forgotPasswordFormGroup = this.formBuilder.group({\r\n\t\t\temail: new FormControl('', [Validators.required, Validators.email, Validators.maxLength(64)])\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\tsendForgotPasswordEmail(): void {\r\n\t\tif (this.forgotPasswordFormGroup.valid) {\r\n\t\t\tif (!this.fetchingResult) {\r\n\t\t\t\tthis.fetchingResult = true;\r\n\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\tthis.userService.forgotPassword(this.email.value).subscribe({\r\n\t\t\t\t\t\tnext: (result: any) => {\r\n\t\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageTypeLabel, AppConstants.successLabel);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageHeaderLabel, AppConstants.forgotPasswordSuccessHeader);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageDetailLabel, AppConstants.forgotPasswordSuccessDetail);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(AppConstants.toLoginLabel, AppConstants.falseLabel);\r\n\t\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\t\tthis.thisDialogRef.close();\r\n\t\t\t\t\t\t\tthis.router.navigateByUrl('/message');\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","<mat-dialog-content >\r\n\t<div class=\"position-relative\">\r\n\t\t<h2 class=\"mat-h2 m-0\">\r\n\t\t\tRetrieve Password\r\n\t\t</h2>\r\n\t\r\n\t\t<hr class=\"divider\">\r\n\t\r\n\t\t<form [formGroup]=\"forgotPasswordFormGroup\" class=\"position-relative\" (ngSubmit)=\"sendForgotPasswordEmail()\">\r\n\t\t\t<mat-form-field appearance=\"outline\" class=\"w-100\" style=\"padding-right: 90px;\">\r\n\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t<input matInput formControlName=\"email\" placeholder=\"Email\">\r\n\t\t\t\t<mat-error *ngIf=\"email.hasError('required')\">\r\n\t\t\t\t\tEmail is <b>required</b>\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"email.hasError('email') || email.hasError('maxlength')\">\r\n\t\t\t\t\tMust be a valid email address\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<button mat-raised-button color=\"primary\" type=\"submit\" class=\"position-absolute\"\r\n\t\t\tstyle=\"top: 4px; right: 0;\">Retrieve</button>\r\n\t\t</form>\r\n\t\r\n\t\t<div *ngIf=\"fetchingResult\" class=\"position-absolute\" style=\"transform: scale(0.3); top: -35px; right: -35px;\">\r\n\t\t\t<mat-spinner></mat-spinner>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</mat-dialog-content>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { Notification } from 'src/app/model/notification';\r\nimport { User } from 'src/app/model/user';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { NotificationService } from 'src/app/service/notification.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PostDialogComponent } from '../post-dialog/post-dialog.component';\r\nimport { SearchDialogComponent } from '../search-dialog/search-dialog.component';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-header',\r\n\ttemplateUrl: './header.component.html',\r\n\tstyleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n\tauthUser: User;\r\n\tisUserLoggedIn: boolean = false;\r\n\tisProfilePage: boolean = false;\r\n\tnotifications: Notification[] = [];\r\n\thasUnseenNotification: boolean = false;\r\n\tresultPage: number = 1;\r\n\tresultSize: number = 5;\r\n\thasMoreNotifications: boolean = false;\r\n\tfetchingResult: boolean = false;\r\n\tdefaultProfilePhotoUrl = environment.defaultProfilePhotoUrl;\r\n\t\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate notificationService: NotificationService,\r\n\t\tprivate matDialog: MatDialog,\r\n\t\tprivate matSnackbar: MatSnackBar) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tif (this.authService.isUserLoggedIn()) {\r\n\t\t\tthis.isUserLoggedIn = true;\r\n\t\t\tthis.authUser = this.authService.getAuthUserFromCache();\r\n\t\t} else {\r\n\t\t\tthis.isUserLoggedIn = false;\r\n\t\t}\r\n\r\n\t\tif (this.isUserLoggedIn) {\r\n\t\t\tthis.loadNotifications(1);\r\n\t\t}\r\n\r\n\t\tthis.authService.logoutSubject.subscribe(loggedOut => {\r\n\t\t\tif (loggedOut) {\r\n\t\t\t\tthis.isUserLoggedIn = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.authService.loginSubject.subscribe(loggedInUser => {\r\n\t\t\tif (loggedInUser) {\r\n\t\t\t\tthis.authUser = loggedInUser;\r\n\t\t\t\tthis.isUserLoggedIn = true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\topenPostDialog(): void {\r\n\t\tthis.matDialog.open(PostDialogComponent, {\r\n\t\t\tdata: null,\r\n\t\t\tautoFocus: false,\r\n\t\t\tminWidth: '500px',\r\n\t\t\tmaxWidth: '700px'\r\n\t\t});\r\n\t}\r\n\r\n\topenSearchDialog(): void {\r\n\t\tthis.matDialog.open(SearchDialogComponent, {\r\n\t\t\tautoFocus: true,\r\n\t\t\twidth: '500px'\r\n\t\t});\r\n\t}\r\n\r\n\tloadNotifications(page: number): void {\r\n\t\tthis.fetchingResult = true;\r\n\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.notificationService.getNotifications(page,  this.resultSize).subscribe({\r\n\t\t\t\tnext: (notifications: Notification[]) => {\r\n\t\t\t\t\tthis.fetchingResult = false;\r\n\r\n\t\t\t\t\tnotifications.forEach(n => {\r\n\t\t\t\t\t\tthis.notifications.push(n);\r\n\t\t\t\t\t\tif (!n.isSeen) this.hasUnseenNotification = true;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (notifications.length > 0) {\r\n\t\t\t\t\t\tthis.hasMoreNotifications = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.hasMoreNotifications = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.resultPage++;\r\n\t\t\t\t},\r\n\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\thandleUnseenNotifications(): void {\r\n\t\tif (this.hasUnseenNotification) {\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.notificationService.markAllSeen().subscribe({\r\n\t\t\t\t\tnext: (response: any) => {\r\n\t\t\t\t\t\tthis.hasUnseenNotification = false;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"position-fixed top-0 mat-elevation-z3 p-4\" style=\"z-index: 999;\">\r\n\t<a href=\"/\" class=\"text-white text-decoration-none\">Social App</a>\r\n\r\n\t<span class=\"example-spacer\"></span>\r\n\r\n\t<a href=\"/profile\" class=\"rounded-pill ps-2 pt-1 pe-3 pb-1 text-white text-decoration-none\" *ngIf=\"isUserLoggedIn\">\r\n\t\t<span class=\"rounded-circle d-inline-block align-middle centered-bg-image\"\r\n\t\t\tstyle=\"width: 30px; height: 30px; background-color: white; background-image: url('{{authUser.profilePhoto ? authUser.profilePhoto : defaultProfilePhotoUrl}}');\"></span>\r\n\t\t<span class=\"mat-body-strong d-inline-block align-middle ps-2\">{{ authUser?.firstName }}</span>\r\n\t</a>\r\n\r\n\t<a mat-raised-button class=\"me-3\" *ngIf=\"!isUserLoggedIn\" href=\"/login\">Login</a>\r\n\t<a mat-raised-button *ngIf=\"!isUserLoggedIn\" href=\"/signup\">Signup</a>\r\n\r\n\t<div *ngIf=\"isUserLoggedIn\">\r\n\t\t<button mat-icon-button (click)=\"openSearchDialog()\">\r\n\t\t\t<mat-icon>search</mat-icon>\r\n\t\t</button>\r\n\r\n\t\t<button mat-icon-button [matMenuTriggerFor]=\"notificationMenu\" (click)=\"handleUnseenNotifications()\">\r\n\t\t\t<mat-icon>notifications</mat-icon>\r\n\t\t\t<span class=\"position-absolute translate-middle p-2 bg-danger rounded-circle\" style=\"top: 10px; right: -5px;\" *ngIf=\"hasUnseenNotification\"></span>\r\n\t\t</button>\r\n\t\t<mat-menu #notificationMenu=\"matMenu\" xPosition=\"before\">\r\n\t\t\t<h2 class=\"mat-h2 m-0 text-center\" style=\"padding: 12px 36px\" *ngIf=\"notifications.length <= 0\" (click)=\"$event.stopPropagation();\">No Notification</h2>\r\n\t\t\t<h2 class=\"mat-h2 m-0 text-center\" style=\"padding: 12px 20px 20px 20px;\" *ngIf=\"notifications.length > 0\" (click)=\"$event.stopPropagation();\">Notifications</h2>\r\n\r\n\t\t\t<a mat-menu-item *ngFor=\"let notification of notifications; let last = last;\"\r\n\t\t\t href=\"/posts/{{ notification.owningPost.id }}\"\r\n\t\t\t class=\"border border-1 border-start-0 border-end-0\"\r\n\t\t\t [ngClass]=\"last ? '' : 'border-bottom-0'\"\r\n\t\t\t style=\"height: auto; line-height: 1.6; white-space: normal; font-size: 14px; padding: 16px 20px;\">\r\n\t\t\t \t<mat-icon color=\"primary\" style=\"margin-right: 5px;\" *ngIf=\"notification.type === 'POST_LIKE' || notification.type === 'COMMENT_LIKE'\">favorite</mat-icon>\r\n\t\t\t \t<mat-icon color=\"primary\" style=\"margin-right: 5px;\" *ngIf=\"notification.type === 'POST_COMMENT'\">comment</mat-icon>\r\n\t\t\t \t<mat-icon color=\"primary\" style=\"margin-right: 5px;\" *ngIf=\"notification.type === 'POST_SHARE'\">share</mat-icon>\r\n\r\n\t\t\t \t<span class=\"fw-500\" *ngIf=\"notification.sender\">{{ notification.sender.firstName + ' ' + notification.sender.lastName }}</span>\r\n\t\t\t \t<span class=\"fw-500 text-danger\" *ngIf=\"!notification.sender\">An App User</span>\r\n\r\n\t\t\t\t<span *ngIf=\"notification.type === 'POST_LIKE'\">\r\n\t\t\t\t\t<span *ngIf=\"notification.owningPost.likeCount > 1\">\r\n\t\t\t\t\t\tand\r\n\t\t\t\t\t\t<span class=\"fw-500\">\r\n\t\t\t\t\t\t\t{{ notification.owningPost.likeCount - 1 }}\r\n\t\t\t\t\t\t\tother\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t liked your\r\n\t\t\t\t\t<span *ngIf=\"notification.owningPost.content\">\r\n\t\t\t\t\t\tpost \"{{ notification.owningPost.content | slice:0:44 }}...\"\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span *ngIf=\"!notification.owningPost.content\">\r\n\t\t\t\t\t\tphoto\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</span>\r\n\t\t\t\t\r\n\t\t\t\t<span *ngIf=\"notification.type === 'POST_COMMENT'\">\r\n\t\t\t\t\t<span *ngIf=\"notification.owningPost.commentCount > 1\">\r\n\t\t\t\t\t\tand\r\n\t\t\t\t\t\t<span class=\"fw-500\">\r\n\t\t\t\t\t\t\t{{ notification.owningPost.commentCount - 1 }}\r\n\t\t\t\t\t\t\tother\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\tcommented on your\r\n\t\t\t\t\t<span *ngIf=\"notification.owningPost.content\">\r\n\t\t\t\t\t\tpost \"{{ notification.owningPost.content | slice:0:24 }}...\"\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span *ngIf=\"!notification.owningPost.content\">\r\n\t\t\t\t\t\tphoto\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</span>\r\n\r\n\t\t\t\t<span *ngIf=\"notification.type === 'POST_SHARE'\">\r\n\t\t\t\t\t<span *ngIf=\"notification.owningPost.shareCount > 1\">\r\n\t\t\t\t\t\tand\r\n\t\t\t\t\t\t<span class=\"fw-500\">\r\n\t\t\t\t\t\t\t{{ notification.owningPost.shareCount - 1 }}\r\n\t\t\t\t\t\t\tother\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\tshared your\r\n\t\t\t\t\t<span *ngIf=\"notification.owningPost.content\">\r\n\t\t\t\t\t\tpost \"{{ notification.owningPost.content | slice:0:24 }}...\"\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span *ngIf=\"!notification.owningPost.content\">\r\n\t\t\t\t\t\tphoto\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</span>\r\n\r\n\t\t\t\t<span *ngIf=\"notification.type === 'COMMENT_LIKE'\">\r\n\t\t\t\t\t<span *ngIf=\"notification.owningComment.likeCount > 1\">\r\n\t\t\t\t\t\tand\r\n\t\t\t\t\t\t<span class=\"fw-500\">\r\n\t\t\t\t\t\t{{ notification.owningComment.likeCount - 1\t }}\r\n\t\t\t\t\t\t\tother\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\tliked your comment \"{{ notification.owningComment.content | slice:0:24 }}...\"\r\n\t\t\t\t</span>\r\n\t\t\t</a>\r\n\r\n\t\t\t<div (click)=\"$event.stopPropagation()\" class=\"position-relative ps-3 pe-3\">\r\n\t\t\t\t<div class=\"text-center\" *ngIf=\"hasMoreNotifications\" style=\"margin: 20px 12px 12px 12px;\">\r\n\t\t\t\t\t<button mat-raised-button color=\"primary\" class=\"rounded-pill align-middle\" *ngIf=\"hasMoreNotifications && !(fetchingResult && resultPage > 1)\" (click)=\"loadNotifications(resultPage)\">Load More</button>\r\n\t\t\t\t\t<div *ngIf=\"fetchingResult && resultPage > 1\" class=\"d-inline-block\" style=\"margin-top: 3px;\">\r\n\t\t\t\t\t\t<mat-spinner style=\"zoom: 0.3; margin: 0 auto;\"></mat-spinner>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</mat-menu>\r\n\t\t\r\n\t\t<button mat-icon-button [matMenuTriggerFor]=\"mainMenu\">\r\n\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t</button>\r\n\t\t<mat-menu #mainMenu=\"matMenu\" xPosition=\"before\">\r\n\t\t\t<a mat-menu-item href=\"/profile\">Profile</a>\r\n\t\t\t<a mat-menu-item href=\"/settings\">Settings</a>\r\n\t\t\t<a mat-menu-item href=\"/logout\">Logout</a>\r\n\t\t</mat-menu>\r\n\t</div>\r\n</mat-toolbar>\r\n\r\n<button mat-fab color=\"primary\" matTooltip=\"Create New Post\" matTooltipPosition=\"left\" class=\"position-fixed\"\r\n\tstyle=\"bottom: 30px; right: 30px;\" (click)=\"openPostDialog()\">\r\n\t<mat-icon>add</mat-icon>\r\n</button>","import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { User } from 'src/app/model/user';\r\nimport { UserLogin } from 'src/app/model/user-login';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { ForgotPasswordDialogComponent } from '../forgot-password-dialog/forgot-password-dialog.component';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-login',\r\n\ttemplateUrl: './login.component.html',\r\n\tstyleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\tloginFormGroup: FormGroup;\r\n\tsubmittingForm: boolean = false;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate router: Router,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate matSnackbar: MatSnackBar,\r\n\t\tprivate matDialog: MatDialog) { }\r\n\r\n\tget email() { return this.loginFormGroup.get('email') }\r\n\tget password() { return this.loginFormGroup.get('password') }\r\n\r\n\tngOnInit(): void {\r\n\t\tif (this.authService.isUserLoggedIn()) {\r\n\t\t\tthis.router.navigateByUrl('/profile');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.loginFormGroup = this.formBuilder.group({\r\n\t\t\temail: new FormControl('',\r\n\t\t\t\t[Validators.required, Validators.email]\r\n\t\t\t),\r\n\t\t\tpassword: new FormControl('',\r\n\t\t\t\t[Validators.required, Validators.minLength(6), Validators.maxLength(32)]\r\n\t\t\t)\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\thandleLogin(): void {\r\n\t\tif (this.loginFormGroup.valid) {\r\n\t\t\tthis.submittingForm = true;\r\n\t\t\tconst userLogin = new UserLogin();\r\n\t\t\tuserLogin.email = this.email?.value;\r\n\t\t\tuserLogin.password = this.password?.value;\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.authService.login(userLogin).subscribe({\r\n\t\t\t\t\tnext: (response: HttpResponse<User>) => {\r\n\t\t\t\t\t\tconst authToken = response.headers.get('Jwt-Token');\r\n\t\t\t\t\t\tthis.authService.storeTokenInCache(authToken);\r\n\t\t\t\t\t\tthis.authService.storeAuthUserInCache(response.body);\r\n\t\t\t\t\t\tthis.submittingForm = false;\r\n\t\t\t\t\t\tthis.router.navigateByUrl('/profile');\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tconst validationErrors = errorResponse.error.validationErrors;\r\n\t\t\t\t\t\tif (validationErrors != null) {\r\n\t\t\t\t\t\t\tObject.keys(validationErrors).forEach(key => {\r\n\t\t\t\t\t\t\t\tconst formControl = this.loginFormGroup.get(key);\r\n\t\t\t\t\t\t\t\tif (formControl) {\r\n\t\t\t\t\t\t\t\t\tformControl.setErrors({\r\n\t\t\t\t\t\t\t\t\t\tserverError: validationErrors[key]\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\tdata: 'Incorrect email or password.',\r\n\t\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.submittingForm = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\topenForgotPasswordDialog(e: Event): void {\r\n\t\te.preventDefault();\r\n\t\tthis.matDialog.open(ForgotPasswordDialogComponent, {\r\n\t\t\tautoFocus: true,\r\n\t\t\twidth: '500px'\r\n\t\t});\r\n\t}\r\n}\r\n","<div class=\"mt-100 me-auto ms-auto pb-5\" style=\"width: 500px;\">\r\n\t<mat-card class=\"mat-elevation-z3\">\r\n\t\t<mat-card-title class=\"text-center ps-3 pt-5 pe-3\">Login To Your Account</mat-card-title>\r\n\r\n\t\t<mat-card-content class=\"p-4\">\r\n\t\t\t<form [formGroup]=\"loginFormGroup\" (ngSubmit)=\"handleLogin()\">\r\n\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"email\" placeholder=\"Ex. johndoe@example.com\">\r\n\t\t\t\t\t<mat-error *ngIf=\"email.hasError('required')\">\r\n\t\t\t\t\t\tEmail is <b>required</b>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"email.hasError('email') || email.hasError('serverError')\">\r\n\t\t\t\t\t\tPlease, enter a valid email address\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t<mat-label>Password</mat-label>\r\n\t\t\t\t\t<input type=\"password\" matInput formControlName=\"password\" placeholder=\"*************\">\r\n\t\t\t\t\t<mat-error *ngIf=\"password.hasError('required')\">\r\n\t\t\t\t\t\tPassword is <b>required</b>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"password.hasError('minlength', 'maxlength')\">\r\n\t\t\t\t\t\tPassword must be 6 to 32 characters long\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"password.hasError('serverError')\">\r\n\t\t\t\t\t\tPassword has to be alpha numeric and must include uppercase, lowercase, and special characters\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<a class=\"d-inline-block text-secondary text-decoration-none cursor-pointer mt-3\" (click)=\"openForgotPasswordDialog($event)\">\r\n\t\t\t\t\tForgot Password?\r\n\t\t\t\t</a>\r\n\r\n\t\t\t\t<mat-card-actions align=\"end\" style=\"margin-top: -35px; padding-right: 8px;\">\r\n\t\t\t\t\t<button mat-raised-button color=\"primary\" type=\"submit\">Login</button>\r\n\t\t\t\t</mat-card-actions>\r\n\t\t\t</form>\r\n\t\t</mat-card-content>\r\n\r\n\t\t<mat-card-footer *ngIf=\"submittingForm == true\">\r\n\t\t\t<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n\t\t</mat-card-footer>\r\n\t</mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n\tselector: 'app-logout',\r\n\ttemplateUrl: './logout.component.html',\r\n\tstyleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n\tconstructor(private authService: AuthService, private router: Router) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.authService.logout();\r\n\t\tthis.router.navigateByUrl('/login');\r\n\t}\r\n\r\n}\r\n","<p>logout works!</p>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\n\r\n@Component({\r\n\tselector: 'app-message',\r\n\ttemplateUrl: './message.component.html',\r\n\tstyleUrls: ['./message.component.css']\r\n})\r\nexport class MessageComponent implements OnInit, OnDestroy {\r\n\tmessageType: string;\r\n\tmessageHeader: string;\r\n\tmessageDetail: string;\r\n\ttoSignup: boolean = false;\r\n\ttoLogin: boolean = false;\r\n\r\n\tconstructor(private router: Router) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.messageType = localStorage.getItem(AppConstants.messageTypeLabel)\r\n\t\tthis.messageHeader = localStorage.getItem(AppConstants.messageHeaderLabel)\r\n\t\tthis.messageDetail = localStorage.getItem(AppConstants.messageDetailLabel)\r\n\t\tthis.toSignup = localStorage.getItem(AppConstants.toSignupLabel) === 'true' ? true : false;\r\n\t\tthis.toLogin = localStorage.getItem(AppConstants.toLoginLabel) === 'true' ? true : false;\r\n\r\n\t\tif (this.messageType === null || this.messageHeader === null) {\r\n\t\t\tthis.router.navigateByUrl('/');\r\n\t\t}\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tlocalStorage.removeItem(AppConstants.messageTypeLabel);\r\n\t\tlocalStorage.removeItem(AppConstants.messageHeaderLabel);\r\n\t\tlocalStorage.removeItem(AppConstants.messageDetailLabel);\r\n\t\tlocalStorage.removeItem(AppConstants.toSignupLabel);\r\n\t\tlocalStorage.removeItem(AppConstants.toLoginLabel);\r\n\t}\r\n}\r\n","<div class=\"mt-100 me-auto ms-auto\" style=\"width: 500px;\">\r\n\t<mat-card class=\"p-4\">\r\n\t\t<mat-card-title class=\"pb-3\"\r\n\t\t\t[ngClass]=\"{'text-danger' : messageType === 'error', 'text-success' : messageType === 'success'}\">\r\n\t\t\t{{ messageHeader }}\r\n\t\t</mat-card-title>\r\n\r\n\t\t<mat-card-subtitle>\r\n\t\t\t{{ messageDetail }}\r\n\t\t</mat-card-subtitle>\r\n\r\n\t\t<mat-card-actions align=\"end\" *ngIf=\"toLogin === true\">\r\n\t\t\t<a mat-raised-button color=\"primary\" routerLink=\"'/login\">Login</a>\r\n\t\t</mat-card-actions>\r\n\t</mat-card>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { User } from 'src/app/model/user';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { PostService } from 'src/app/service/post.service';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-photo-upload-dialog',\r\n\ttemplateUrl: './photo-upload-dialog.component.html',\r\n\tstyleUrls: ['./photo-upload-dialog.component.css']\r\n})\r\nexport class PhotoUploadDialogComponent implements OnInit {\r\n\tphotoPreviewUrl: string;\r\n\tphoto: File;\r\n\tdefaultProfilePhotoUrl: string = environment.defaultProfilePhotoUrl;\r\n\tdefaultCoverPhotoUrl: string = environment.defaultCoverPhotoUrl;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate userService: UserService,\r\n\t\tprivate thisDialogRef: MatDialogRef<PhotoUploadDialogComponent>,\r\n\t\tprivate matSnackbar: MatSnackBar) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tif (this.data.uploadType === 'profilePhoto') {\r\n\t\t\tthis.photoPreviewUrl = this.data.authUser.profilePhoto ? this.data.authUser.profilePhoto : this.defaultProfilePhotoUrl;\r\n\t\t} else if (this.data.uploadType === 'coverPhoto') {\r\n\t\t\tthis.photoPreviewUrl = this.data.authUser.coverPhoto ? this.data.authUser.coverPhoto : this.defaultCoverPhotoUrl;\r\n\t\t}\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\tpreviewPhoto(e: any): void {\r\n\t\tif (e.target.files) {\r\n\t\t\tthis.photo = e.target.files[0];\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\treader.readAsDataURL(this.photo);\r\n\t\t\treader.onload = (e: any) => {\r\n\t\t\t\tthis.photoPreviewUrl = e.target.result;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsavePhoto(): void {\r\n\t\tif (this.photo) {\r\n\t\t\tif (this.data.uploadType === 'profilePhoto') {\r\n\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\tthis.userService.updateProfilePhoto(this.photo).subscribe({\r\n\t\t\t\t\t\tnext: (updatedUser: User) => {\r\n\t\t\t\t\t\t\tthis.authService.storeAuthUserInCache(updatedUser);\r\n\t\t\t\t\t\t\tthis.photoPreviewUrl = null;\r\n\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\tdata: 'Profile photo updated successfully.',\r\n\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthis.thisDialogRef.close({ updatedUser });\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t} else if (this.data.uploadType === 'coverPhoto') {\r\n\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\tthis.userService.updateCoverPhoto(this.photo).subscribe({\r\n\t\t\t\t\t\tnext: (updatedUser: User) => {\r\n\t\t\t\t\t\t\tthis.authService.storeAuthUserInCache(updatedUser);\r\n\t\t\t\t\t\t\tthis.photoPreviewUrl = null;\r\n\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\tdata: 'Cover photo updated successfully.',\r\n\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthis.thisDialogRef.close({ updatedUser });\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\tdata: 'Please, first upload a photo to save.',\r\n\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\tduration: 5000\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n}","<mat-dialog-content>\r\n\t<h2 class=\"mat-h2 m-0\">\r\n\t\t{{ data.header }}\r\n\t</h2>\r\n\r\n\t<hr class=\"divider\">\r\n\r\n\t<div>\r\n\t\t<div>\r\n\t\t\t<img [src]=\"photoPreviewUrl\" alt=\"\" style=\"max-width: 100%; max-height: 300px;\">\r\n\t\t</div>\r\n\t\t<div class=\"mt-3\">\r\n\t\t\t<input type=\"file\" class=\"d-none visually-hidden\" id=\"photoFile\" (change)=\"previewPhoto($event)\">\r\n\t\t\t<label for=\"photoFile\" matRipple class=\"d-inline-block cursor-pointer\">\r\n\t\t\t\t<button mat-stroked-button color=\"primary\" style=\"pointer-events: none;\">\r\n\t\t\t\t\t<mat-icon>camera_alt</mat-icon>\r\n\t\t\t\t\tUpload New Photo\r\n\t\t\t\t</button>\r\n\t\t\t</label>\r\n\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"float-end\" (click)=\"savePhoto()\">\r\n\t\t\t\tSave Photo\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</mat-dialog-content>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Inject, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { Comment } from 'src/app/model/comment';\r\nimport { CommentResponse } from 'src/app/model/comment-response';\r\nimport { Post } from 'src/app/model/post';\r\nimport { User } from 'src/app/model/user';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { CommentService } from 'src/app/service/comment.service';\r\nimport { PostService } from 'src/app/service/post.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CommentLikeDialogComponent } from '../comment-like-dialog/comment-like-dialog.component';\r\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\r\nimport { PostLikeDialogComponent } from '../post-like-dialog/post-like-dialog.component';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-post-comment-dialog',\r\n\ttemplateUrl: './post-comment-dialog.component.html',\r\n\tstyleUrls: ['./post-comment-dialog.component.css']\r\n})\r\nexport class PostCommentDialogComponent implements OnInit, OnDestroy {\r\n\t@Output() updatedCommentCountEvent = new EventEmitter<number>();\r\n\t@Output() newItemEvent = new EventEmitter<string>();\r\n\tauthUserId: number;\r\n\tcommentResponseList: CommentResponse[] = [];\r\n\tresultPage: number = 1;\r\n\tresultSize: number = 5;\r\n\thasMoreResult: boolean = false;\r\n\tfetchingResult: boolean = false;\r\n\tcreatingComment: boolean = false;\r\n\tcommentFormGroup: FormGroup;\r\n\tdefaultProfilePhotoUrl = environment.defaultProfilePhotoUrl;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\t@Inject(MAT_DIALOG_DATA) public dataPost: Post,\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate postService: PostService,\r\n\t\tprivate commentService: CommentService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate matDialog: MatDialog,\r\n\t\tprivate matSnackbar: MatSnackBar) { }\r\n\t\r\n\tget content() { return this.commentFormGroup.get('content') }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.authUserId = this.authService.getAuthUserId();\r\n\r\n\t\tthis.commentFormGroup = this.formBuilder.group({\r\n\t\t\tcontent: new FormControl('', [Validators.required, Validators.maxLength(1024)])\r\n\t\t});\r\n\r\n\t\tthis.loadComments(1);\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\tloadComments(currentPage: number): void {\r\n\t\tif (!this.fetchingResult) {\r\n\t\t\tif (this.dataPost.commentCount > 0) {\r\n\t\t\t\tthis.fetchingResult = true;\r\n\t\r\n\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\tthis.postService.getPostComments(this.dataPost.id, currentPage, this.resultSize).subscribe({\r\n\t\t\t\t\t\tnext: (resultList: CommentResponse[]) => {\r\n\t\t\t\t\t\t\tresultList.forEach(commentResponse => this.commentResponseList.push(commentResponse));\r\n\t\t\t\t\t\t\tif (currentPage * this.resultSize < this.dataPost.commentCount) {\r\n\t\t\t\t\t\t\t\tthis.hasMoreResult = true;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.hasMoreResult = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.resultPage++;\r\n\t\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t} \r\n\t\t}\r\n\t}\r\n\r\n\tcreateNewComment(): void {\r\n\t\tthis.creatingComment = true;\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.postService.createPostComment(this.dataPost.id, this.content.value).subscribe({\r\n\t\t\t\tnext: (newComment: CommentResponse) => {\r\n\t\t\t\t\tthis.commentFormGroup.reset();\r\n\t\t\t\t\tObject.keys(this.commentFormGroup.controls).forEach(key => {\r\n\t\t\t\t\t\tthis.commentFormGroup.get(key).setErrors(null) ;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.commentResponseList.unshift(newComment);\r\n\t\t\t\t\tthis.updatedCommentCountEvent.emit(this.commentResponseList.length);\r\n\t\t\t\t\tthis.creatingComment = false;\r\n\r\n\t\t\t\t},\r\n\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.creatingComment = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\topenCommentLikeDialog(comment: Comment): void {\r\n\t\tthis.matDialog.open(CommentLikeDialogComponent, {\r\n\t\t\tdata: comment,\r\n\t\t\tminWidth: '500px',\r\n\t\t\tmaxWidth: '700px'\r\n\t\t});\r\n\t}\r\n\r\n\tlikeOrUnlikeComment(commentResponse: CommentResponse) {\r\n\t\tif (commentResponse.likedByAuthUser) {\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.commentService.unlikeComment(commentResponse.comment.id).subscribe({\r\n\t\t\t\t\tnext: (response: any) => {\r\n\t\t\t\t\t\tconst targetCommentResponse = this.commentResponseList.find(cR => cR === commentResponse);\r\n\t\t\t\t\t\ttargetCommentResponse.likedByAuthUser = false;\r\n\t\t\t\t\t\ttargetCommentResponse.comment.likeCount--;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.commentService.likeComment(commentResponse.comment.id).subscribe({\r\n\t\t\t\t\tnext: (response: any) => {\r\n\t\t\t\t\t\tconst targetCommentResponse = this.commentResponseList.find(cR => cR === commentResponse);\r\n\t\t\t\t\t\ttargetCommentResponse.likedByAuthUser = true;\r\n\t\t\t\t\t\ttargetCommentResponse.comment.likeCount++;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\topenCommentDeleteConfirmDialog(commentResponse: CommentResponse): void {\r\n\t\tconst dialogRef = this.matDialog.open(ConfirmationDialogComponent, {\r\n\t\t\tdata: 'Do you want to delete this comment permanently?',\r\n\t\t\tautoFocus: false,\r\n\t\t\twidth: '500px'\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(\r\n\t\t\tresult => {\r\n\t\t\t\tif (result) this.deleteComment(commentResponse);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tprivate deleteComment(commentResponse: CommentResponse) {\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.commentService.deleteComment(this.dataPost.id, commentResponse.comment.id).subscribe({\r\n\t\t\t\tnext: (response: any) => {\r\n\t\t\t\t\tconst targetIndex = this.commentResponseList.indexOf(commentResponse);\r\n\t\t\t\t\tthis.commentResponseList.splice(targetIndex, 1);\r\n\t\t\t\t\tthis.dataPost.commentCount--;\r\n\r\n\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\tdata: 'Comment deleted successfully.',\r\n\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n","<mat-dialog-content>\r\n\t<div class=\"position-relative\">\r\n\t\t<h2 class=\"mat-h2 m-0\">\r\n\t\t\t{{ dataPost.commentCount > 0 ? 'Comments(' + dataPost.commentCount + ')' : 'No Comment' }}\r\n\t\t</h2>\r\n\t\r\n\t\t<hr class=\"divider\">\r\n\t\r\n\t\t<form [formGroup]=\"commentFormGroup\" #commentForm=\"ngForm\" (ngSubmit)=\"createNewComment()\"\r\n\t\t\tclass=\"position-relative\">\r\n\t\t\t<mat-form-field appearance=\"outline\" class=\"w-100\" style=\"padding-right: 90px;\">\r\n\t\t\t\t<mat-label>Post new comment</mat-label>\r\n\t\t\t\t<textarea matInput formControlName=\"content\" placeholder=\"Post new comment\"></textarea>\r\n\t\t\t\t<mat-error *ngIf=\"content.hasError('required') && commentForm.submitted\">\r\n\t\t\t\t\tComment cannot be empty\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"content.hasError('maxlength')\">\r\n\t\t\t\t\tComment length cannot exceed 1024 characters\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<button mat-raised-button color=\"primary\" type=\"submit\" class=\"position-absolute\"\r\n\t\t\t\tstyle=\"top: 4px; right: 0;\">Submit</button>\r\n\t\t</form>\r\n\t\r\n\t\t<ul class=\"list-group list-group-flush\">\r\n\t\t\t<li class=\"list-group-item ps-0 pt-3 pe-0 pb-3\" *ngFor=\"let commentResponse of commentResponseList\">\r\n\t\t\t\t<div class=\"rounded-circle d-inline-block align-middle centered-bg-image\"\r\n\t\t\t\t\tstyle=\"width: 35px; height: 35px; background-image: url('{{commentResponse.comment.author.profilePhoto ? commentResponse.comment.author.profilePhoto : defaultProfilePhotoUrl}}');\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"ps-5\" style=\"margin-top: -38px;\">\r\n\t\t\t\t\t<a class=\"d-inline-block text-decoration-none text-dark align-middle fw-500 cursor-pointer\"\r\n\t\t\t\t\t\t href=\"/users/{{commentResponse.comment.author.id}}\">{{commentResponse.comment.author.firstName + ' ' +\r\n\t\t\t\t\t\t commentResponse.comment.author.lastName}}</a>\r\n\t\t\t\t\t<br>\r\n\t\t\t\t\t<span class=\"text-secondary d-inline-block\">\r\n\t\t\t\t\t\t<mat-icon class=\"align-middle w-auto h-auto\" style=\"font-size: 16px;\">watch_later</mat-icon>\r\n\t\t\t\t\t\t<span class=\"align-middle ps-1 small fw-500\">{{ commentResponse.comment.dateCreated | date:'medium' }}</span>\r\n\t\t\t\t\t</span>\r\n\t\r\n\t\t\t\t\t<p class=\"pt-2 pb-3\">{{ commentResponse.comment.content }}</p>\r\n\t\r\n\t\t\t\t\t<mat-chip-list aria-label=\"Fish selection\">\r\n\t\t\t\t\t\t<mat-chip class=\"me-3 cursor-pointer\" style=\"padding: 4px 10px !important; min-height: 24px;\" (click)=\"openCommentLikeDialog(commentResponse.comment)\">\r\n\t\t\t\t\t\t\tLikes\r\n\t\t\t\t\t\t\t<span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary\">\r\n\t\t\t\t\t\t\t\t{{ commentResponse.comment.likeCount }}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</mat-chip>\r\n\t\t\t\t\t</mat-chip-list>\r\n\t\r\n\t\t\t\t\t<div style=\"margin-top: -40px; text-align: right;\">\r\n\t\t\t\t\t\t<button mat-icon-button matTooltip=\"{{commentResponse.likedByAuthUser ? 'Unlike' : 'Like'}}\" (click)=\"likeOrUnlikeComment(commentResponse)\">\r\n\t\t\t\t\t\t\t<mat-icon [ngClass]=\"commentResponse.likedByAuthUser ? 'text-danger' : 'text-secondary'\">favorite</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button mat-icon-button matTooltip=\"Delete\" *ngIf=\"commentResponse.comment.author.id === authUserId\"  (click)=\"openCommentDeleteConfirmDialog(commentResponse)\">\r\n\t\t\t\t\t\t\t<mat-icon class=\"text-secondary\">delete_sweep</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\r\n\t\t<div class=\"mt-3 mb-3 text-center\" *ngIf=\"hasMoreResult\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"rounded-pill align-middle\" *ngIf=\"hasMoreResult && !(fetchingResult && resultPage > 1)\" (click)=\"loadComments(resultPage)\">Load More</button>\r\n\t\t\t<div *ngIf=\"fetchingResult && resultPage > 1\" class=\"d-inline-block\" style=\"transform: scale(0.3); margin-top: -33px;\">\r\n\t\t\t\t<mat-spinner style=\"margin: 0 auto;\"></mat-spinner>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\r\n\t\t<div *ngIf=\"(fetchingResult && resultPage === 1) || creatingComment\" class=\"position-absolute\" style=\"transform: scale(0.3); top: -35px; right: -35px;\">\r\n\t\t\t<mat-spinner></mat-spinner>\r\n\t\t</div>\r\n\t</div>\r\n</mat-dialog-content>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { Post } from 'src/app/model/post';\r\nimport { PostResponse } from 'src/app/model/post-response';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { PostService } from 'src/app/service/post.service';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-post-detail',\r\n\ttemplateUrl: './post-detail.component.html',\r\n\tstyleUrls: ['./post-detail.component.css']\r\n})\r\nexport class PostDetailComponent implements OnInit, OnDestroy {\r\n\tpostId: number;\r\n\tpostResponse: PostResponse;\r\n\tfetchingResult: boolean = false;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate router: Router,\r\n\t\tprivate postService: PostService,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate matSnackbar: MatSnackBar) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tif (!this.authService.isUserLoggedIn()) {\r\n\t\t\tthis.router.navigateByUrl('/login');\r\n\t\t} else {\r\n\t\t\tthis.fetchingResult = true;\r\n\t\t\tthis.postId = Number(this.activatedRoute.snapshot.paramMap.get('postId'));\r\n\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.postService.getPostById(this.postId).subscribe({\r\n\t\t\t\t\tnext: (postResponse: PostResponse) => {\r\n\t\t\t\t\t\tthis.postResponse = postResponse;\r\n\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageTypeLabel, AppConstants.errorLabel);\r\n\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageHeaderLabel, AppConstants.notFoundErrorHeader);\r\n\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageDetailLabel, AppConstants.notFoundErrorDetail);\r\n\t\t\t\t\t\tlocalStorage.setItem(AppConstants.toLoginLabel, AppConstants.falseLabel);\r\n\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\tthis.router.navigateByUrl('/message');\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n}\r\n","<div class=\"text-center fully-centered\" *ngIf=\"fetchingResult\">\r\n\t<mat-spinner style=\"zoom: 0.5;\" class=\"text-center ms-auto me-auto\"></mat-spinner>\r\n</div>\r\n\r\n<div class=\"container\" *ngIf=\"!fetchingResult\">\r\n\t<div class=\"row justify-content-center\">\r\n\t\t<div class=\"col-6 mb-4\" style=\"margin-top: 110px;\">\r\n\t\t\t<app-post [postResponse]=\"postResponse\" [isDetailedPost]=\"true\"></app-post>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { Post } from 'src/app/model/post';\r\nimport { PostService } from 'src/app/service/post.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\nimport { TagDialogComponent } from '../tag-dialog/tag-dialog.component';\r\n\r\n@Component({\r\n\tselector: 'app-post-dialog',\r\n\ttemplateUrl: './post-dialog.component.html',\r\n\tstyleUrls: ['./post-dialog.component.css']\r\n})\r\nexport class PostDialogComponent implements OnInit, OnDestroy {\r\n\tpostFormGroup: FormGroup;\r\n\tpostPhoto: File;\r\n\tpostPhotoPreviewUrl: string;\r\n\tpostTags: any[] = [];\r\n\tcreatingPost: boolean = false;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\t@Inject(MAT_DIALOG_DATA) public dataPost: Post,\r\n\t\tprivate postService: PostService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate router: Router,\r\n\t\tprivate matDialog: MatDialog,\r\n\t\tprivate matDialogRef: MatDialogRef<PostDialogComponent>,\r\n\t\tprivate matSnackbar: MatSnackBar) { }\r\n\r\n\tget content() { return this.postFormGroup.get('content'); }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.postFormGroup = this.formBuilder.group({\r\n\t\t\tcontent: new FormControl(((this.dataPost && this.dataPost.content) ? this.dataPost.content : ''), [Validators.maxLength(4096)])\r\n\t\t});\r\n\r\n\t\tif (this.dataPost) {\r\n\t\t\tif (this.dataPost.postPhoto) {\r\n\t\t\t\tthis.postPhotoPreviewUrl = this.dataPost.postPhoto;\r\n\t\t\t}\r\n\r\n\t\t\tthis.populateWithPostTags();\r\n\t\t}\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\tpreviewPostPhoto(event: any): void {\r\n\t\tif (event.target.files) {\r\n\t\t\tthis.postPhoto = event.target.files[0];\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\treader.readAsDataURL(this.postPhoto);\r\n\t\t\treader.onload = (e: any) => {\r\n\t\t\t\tthis.postPhotoPreviewUrl = e.target.result;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\topenPostPhotoDeleteConfirmDialog(): void {\r\n\t\tconst dialogRef = this.matDialog.open(ConfirmationDialogComponent, {\r\n\t\t\tdata: 'Do you want to delete this photo?',\r\n\t\t\twidth: '500px',\r\n\t\t\tautoFocus: false\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(\r\n\t\t\tresult => {\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tthis.deletePostPhoto();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\topenAddTagDialog(e: Event): void {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst dialogRef = this.matDialog.open(TagDialogComponent, {\r\n\t\t\twidth: '500px',\r\n\t\t\tautoFocus: true\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(\r\n\t\t\tresult => {\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tconst tagIndex = this.postTags.findIndex(tN => tN === result.tagName);\r\n\t\t\t\t\tif (tagIndex >= 0) {\r\n\t\t\t\t\t\tthis.postTags[tagIndex].action = 'add'\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.postTags.push({\r\n\t\t\t\t\t\t\ttagName: result.tagName,\r\n\t\t\t\t\t\t\taction: 'add'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(this.postTags)\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tremoveTag(tagName: string): void {\r\n\t\tconst tagIndex = this.postTags.findIndex(tN => tN === tagName);\r\n\t\tif (this.postTags[tagIndex].action === 'saved') {\r\n\t\t\tthis.postTags[tagIndex].action = 'remove';\r\n\t\t} else {\r\n\t\t\tthis.postTags.splice(tagIndex, 1);\r\n\t\t}\r\n\t\tconsole.log(this.postTags)\r\n\t}\r\n\r\n\thandlePostSubmit(): void {\r\n\t\tif (this.content.value.length <= 0 && !this.postPhoto) {\r\n\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\tdata: 'Post cannot be empty.',\r\n\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\tduration: 5000\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.dataPost) {\r\n\t\t\tthis.updatePost();\r\n\t\t} else {\r\n\t\t\tthis.createNewPost();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate createNewPost(): void {\r\n\t\tif (!this.creatingPost) {\r\n\t\t\tthis.creatingPost = true;\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.postService.createNewPost(this.content.value, this.postPhoto, this.postTags).subscribe({\r\n\t\t\t\t\tnext: (createdPost: Post) => {\r\n\t\t\t\t\t\tthis.matDialogRef.close();\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: 'Post created successfully.',\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.creatingPost = false;\r\n\t\t\t\t\t\tthis.router.navigateByUrl(`/posts/${createdPost.id}`).then(() => {\r\n\t\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.creatingPost = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updatePost(): void {\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.postService.updatePost(this.dataPost.id, this.content.value, this.postPhoto, this.postTags).subscribe({\r\n\t\t\t\tnext: (createdPost: Post) => {\r\n\t\t\t\t\tthis.matDialogRef.close();\r\n\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\tdata: 'Post updated successfully.',\r\n\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.router.navigateByUrl(`/posts/${createdPost.id}`);\r\n\t\t\t\t},\r\n\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tprivate deletePostPhoto(): void {\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.postService.deletePostPhoto(this.dataPost.id).subscribe({\r\n\t\t\t\tnext: (createdPost: Post) => {\r\n\t\t\t\t\tthis.postPhotoPreviewUrl = null;\r\n\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\tdata: 'Photo deleted successfully.',\r\n\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tprivate populateWithPostTags(): void {\r\n\t\tthis.dataPost.postTags.forEach(tag => {\r\n\t\t\tthis.postTags.push({\r\n\t\t\t\ttagName: tag.name,\r\n\t\t\t\taction: 'saved'\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n","<mat-dialog-content>\r\n\t<div class=\"position-relative\">\r\n\t\t<h2 class=\"mat-h2 m-0\">\r\n\t\t\t{{ dataPost ? 'Edit This Post' : 'Create New Post' }}\r\n\t\t</h2>\r\n\t\r\n\t\t<hr class=\"divider\">\r\n\t\r\n\t\t<form [formGroup]=\"postFormGroup\" (ngSubmit)=\"handlePostSubmit()\" class=\"position-relative\"\r\n\t\t\tenctype=\"multipart/form-data\">\r\n\t\t\t<mat-form-field appearance=\"outline\" class=\"w-100\" style=\"padding-right: 90px;\">\r\n\t\t\t\t<mat-label>What do you want to post?</mat-label>\r\n\t\t\t\t<textarea matInput formControlName=\"content\" placeholder=\"What do you want to post?\" cdkTextareaAutosize\r\n\t\t\t\t\tcdkAutosizeMinRows=\"2\" cdkAutosizeMaxRows=\"10\">\r\n\t\t\t\t</textarea>\r\n\t\t\t\t<mat-error *ngIf=\"content.hasError('maxlength')\">\r\n\t\t\t\t\tCannot exceed 4096 characters\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\r\n\t\t\t<div *ngIf=\"postPhotoPreviewUrl\" class=\"pb-3\">\r\n\t\t\t\t<img [src]=\"postPhotoPreviewUrl\" alt=\"\" style=\"max-width: 100%;\">\r\n\t\t\t</div>\r\n\t\r\n\t\t\t<div>\r\n\t\t\t\t<div class=\"mb-3\" *ngIf=\"postTags.length > 0\">\r\n\t\t\t\t\t<span class=\"badge rounded-pill text-dark fw-normal d-inline-block position-relative text-center m-2\"\r\n\t\t\t\t\t style=\"font-size: 16px; background-color: rgba(0,0,0,0.1);\" *ngFor=\"let tag of postTags\" [ngClass]=\"tag.action === 'remove' ? 'd-none visually-hidden' : ''\">\r\n\t\t\t\t\t\t{{ tag.tagName }}\r\n\t\t\t\t\t\t<span class=\"position-absolute top-0 start-100 translate-middle bg-danger fw-bold text-white rounded-circle text-center cursor-pointer\"\r\n\t\t\t\t\t\t style=\"width: 20px; height: 20px; line-height: 20px;\" matTooltip=\"Remove Tag\" matTooltipPosition=\"above\" (click)=\"removeTag(tag)\">-</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\r\n\t\t\t\t<input type=\"file\" class=\"d-none visually-hidden\" id=\"postPhotoFile\" *ngIf=\"!dataPost || (dataPost && !dataPost.isTypeShare)\" (change)=\"previewPostPhoto($event)\">\r\n\t\t\t\t\r\n\t\t\t\t<label for=\"postPhotoFile\" *ngIf=\"!dataPost || (dataPost && !dataPost.isTypeShare)\">\r\n\t\t\t\t\t<div class=\"border border-1 rounded-pill ps-3 pt-1 pe-3 pb-1 cursor-pointer\">\r\n\t\t\t\t\t\t<mat-icon class=\"align-middle\">camera_alt</mat-icon>\r\n\t\t\t\t\t\t<span class=\"align-middle fw-500 ps-2\">\r\n\t\t\t\t\t\t\t{{ (dataPost && dataPost.postPhoto) ? 'Update Photo' : 'Add Photo' }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</label>\r\n\t\r\n\t\t\t\t<span class=\"fw-500 align-middle cursor-pointer text-danger d-inline-block ms-4\" *ngIf=\"dataPost && dataPost.postPhoto\" (click)=\"openPostPhotoDeleteConfirmDialog()\">Delete Photo</span>\r\n\t\t\t\t\r\n\t\t\t\t<button mat-icon-button color=\"primary\" matTooltip=\"Add New Tag\" matTooltipPosition=\"left\" class=\"float-end\" (click)=\"openAddTagDialog($event)\">\r\n\t\t\t\t\t<mat-icon>style</mat-icon>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<button mat-raised-button color=\"primary\" type=\"submit\" class=\"position-absolute\" style=\"top: 4px; right: 0;\">\r\n\t\t\t\t{{ dataPost ? 'Update' : 'Post' }}\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t\r\n\t\t<div *ngIf=\"creatingPost\" class=\"position-absolute\" style=\"transform: scale(0.3); top: -35px; right: -35px;\">\r\n\t\t\t<mat-spinner></mat-spinner>\r\n\t\t</div>\r\n\t</div>\r\n</mat-dialog-content>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { Post } from 'src/app/model/post';\r\nimport { User } from 'src/app/model/user';\r\nimport { PostService } from 'src/app/service/post.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-post-like-dialog',\r\n\ttemplateUrl: './post-like-dialog.component.html',\r\n\tstyleUrls: ['./post-like-dialog.component.css']\r\n})\r\nexport class PostLikeDialogComponent implements OnInit, OnDestroy {\r\n\tlikeList: User[] = [];\r\n\tresultPage: number = 1;\r\n\tresultSize: number = 5;\r\n\thasMoreResult: boolean = false;\r\n\tfetchingResult: boolean = false;\r\n\tdefaultProfilePhotoUrl = environment.defaultProfilePhotoUrl;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\t@Inject(MAT_DIALOG_DATA) public dataPost: Post,\r\n\t\tprivate postService: PostService,\r\n\t\tprivate matSnackbar: MatSnackBar) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.loadLikes(1);\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\tloadLikes(currentPage: number): void {\r\n\t\tif (!this.fetchingResult) {\r\n\t\t\tif (this.dataPost.likeCount > 0) {\r\n\t\t\t\tthis.fetchingResult = true;\r\n\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\tthis.postService.getPostLikes(this.dataPost.id, currentPage, this.resultSize).subscribe({\r\n\t\t\t\t\t\tnext: (resultList: User[]) => {\r\n\t\t\t\t\t\t\tresultList.forEach(like => this.likeList.push(like));\r\n\t\t\t\t\t\t\tif (currentPage * this.resultSize < this.dataPost.likeCount) {\r\n\t\t\t\t\t\t\t\tthis.hasMoreResult = true;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.hasMoreResult = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.resultPage++;\r\n\t\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","<mat-dialog-content>\r\n\t<div class=\"position-relative\">\r\n\t\t<h2 class=\"mat-h2 m-0\">\r\n\t\t\t{{ dataPost.likeCount > 0 ? 'Likes(' + dataPost.likeCount + ')' : 'No Like' }}\r\n\t\t</h2>\r\n\t\t<hr class=\"divider\" *ngIf=\"dataPost.likeCount > 0\">\r\n\t\t<ul class=\"list-group list-group-flush\" *ngFor=\"let like of likeList\">\r\n\t\t\t<li class=\"list-group-item ps-0 pt-2 pe-0 pb-2\">\r\n\t\t\t\t<span class=\"rounded-circle d-inline-block align-middle centered-bg-image\"\r\n\t\t\t\t\tstyle=\"width: 30px; height: 30px; background-image: url('{{like.profilePhoto ? like.profilePhoto : defaultProfilePhotoUrl}}');\">\r\n\t\t\t\t</span>\r\n\t\t\t\t<a class=\"d-inline-block text-decoration-none text-dark align-middle ps-2 fw-500 cursor-pointer\"\r\n\t\t\t\t\thref=\"/users/{{like.id}}\">{{like.firstName + ' ' + like.lastName}}</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\r\n\t\t<div class=\"mt-3 mb-3 text-center\" *ngIf=\"hasMoreResult\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"rounded-pill align-middle\" *ngIf=\"hasMoreResult && !(fetchingResult && resultPage > 1)\" (click)=\"loadLikes(resultPage)\">Load More</button>\r\n\t\t\t<div *ngIf=\"fetchingResult && resultPage > 1\" class=\"d-inline-block\" style=\"transform: scale(0.3); margin-top: -33px;\">\r\n\t\t\t\t<mat-spinner style=\"margin: 0 auto;\"></mat-spinner>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\r\n\t\t<div *ngIf=\"fetchingResult && resultPage === 1\" class=\"position-absolute\" style=\"transform: scale(0.3); top: -35px; right: -35px;\">\r\n\t\t\t<mat-spinner></mat-spinner>\r\n\t\t</div>\r\n\t</div>\r\n</mat-dialog-content>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { Post } from 'src/app/model/post';\r\nimport { PostResponse } from 'src/app/model/post-response';\r\nimport { PostService } from 'src/app/service/post.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PostLikeDialogComponent } from '../post-like-dialog/post-like-dialog.component';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-post-share-dialog',\r\n\ttemplateUrl: './post-share-dialog.component.html',\r\n\tstyleUrls: ['./post-share-dialog.component.css']\r\n})\r\nexport class PostShareDialogComponent implements OnInit, OnDestroy {\r\n\tpostShareResponseList: PostResponse[] = [];\r\n\tresultPage: number = 1;\r\n\tresultSize: number = 5;\r\n\thasMoreResult: boolean = false;\r\n\tfetchingResult: boolean = false;\r\n\tdefaultProfilePhotoUrl = environment.defaultProfilePhotoUrl;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\t@Inject(MAT_DIALOG_DATA) public dataPost: Post,\r\n\t\tprivate postService: PostService,\r\n\t\tprivate matDialog: MatDialog,\r\n\t\tprivate matSnackbar: MatSnackBar) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tif (this.dataPost.shareCount > 0) {\r\n\t\t\tthis.loadPostShares(1);\r\n\t\t}\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\tloadPostShares(currentPage: number): void {\r\n\t\tif (!this.fetchingResult) {\r\n\t\t\tthis.fetchingResult = true;\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.postService.getPostShares(this.dataPost.id, currentPage, this.resultSize).subscribe({\r\n\t\t\t\t\tnext: (resultList: PostResponse[]) => {\r\n\t\t\t\t\t\tresultList.forEach(postShareResponse => this.postShareResponseList.push(postShareResponse));\r\n\t\t\t\t\t\tif (currentPage * this.resultSize < this.dataPost.shareCount) {\r\n\t\t\t\t\t\t\tthis.hasMoreResult = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.hasMoreResult = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.resultPage++;\r\n\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tlikeOrUnlikePostShare(likedByAuthUser: boolean, postResponse: PostResponse) {\r\n\t\tif (likedByAuthUser) {\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.postService.unlikePost(postResponse.post.id).subscribe({\r\n\t\t\t\t\tnext: (response: any) => {\r\n\t\t\t\t\t\tpostResponse.likedByAuthUser = false;\r\n\t\t\t\t\t\tpostResponse.post.likeCount--;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.postService.likePost(postResponse.post.id).subscribe({\r\n\t\t\t\t\tnext: (response: any) => {\r\n\t\t\t\t\t\tpostResponse.likedByAuthUser = true;\r\n\t\t\t\t\t\tpostResponse.post.likeCount++;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\topenPostLikeDialog(postResponse: PostResponse): void {\r\n\t\tthis.matDialog.open(PostLikeDialogComponent, {\r\n\t\t\tdata: postResponse.post,\r\n\t\t\tminWidth: '500px',\r\n\t\t\tmaxWidth: '700px'\r\n\t\t});\r\n\t}\r\n}\r\n","<mat-dialog-content>\r\n\t<div class=\"position-relative\">\r\n\t\t<h2 class=\"mat-h2 m-0\">\r\n\t\t\t{{ dataPost.shareCount > 0 ? 'Shares(' + dataPost.shareCount + ')' : 'No Share' }}\r\n\t\t</h2>\r\n\t\t<hr class=\"divider\" *ngIf=\"dataPost.shareCount > 0\">\r\n\t\r\n\t\t<ul class=\"list-group\">\r\n\t\t\t<li class=\"list-group-item p-3\" *ngFor=\"let postShareResponse of postShareResponseList\">\r\n\t\t\t\t<div class=\"rounded-circle d-inline-block align-middle centered-bg-image\"\r\n\t\t\t\t\tstyle=\"width: 35px; height: 35px; background-image: url('{{ postShareResponse.post.author.profilePhoto ? postShareResponse.post.author.profilePhoto : defaultProfilePhotoUrl }}');\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"ps-5\" style=\"margin-top: -38px;\">\r\n\t\t\t\t\t<a class=\"d-inline-block text-decoration-none text-dark align-middle fw-500 cursor-pointer\"\r\n\t\t\t\t\t\t href=\"/users/{{ postShareResponse.post.author.id }}\">{{ postShareResponse.post.author.firstName + ' ' +\r\n\t\t\t\t\t\t postShareResponse.post.author.lastName }}</a>\r\n\t\t\t\t\t<br>\r\n\t\t\t\t\t<span class=\"text-secondary d-inline-block\">\r\n\t\t\t\t\t\t<mat-icon class=\"align-middle w-auto h-auto\" style=\"font-size: 16px;\">watch_later</mat-icon>\r\n\t\t\t\t\t\t<span class=\"align-middle ps-1 small fw-500\">{{ postShareResponse.post.dateCreated | date:'medium' }}</span>\r\n\t\t\t\t\t</span>\r\n\t\r\n\t\t\t\t\t<p class=\"pt-2\">{{ postShareResponse.post.content }}</p>\r\n\t\r\n\t\t\t\t\t<a href=\"/posts/{{ postShareResponse.post.id }}\" class=\"d-inline-block text-decoration-none fw-500 mb-3\">View Post</a>\r\n\r\n\t\t\t\t\t<mat-chip-list aria-label=\"Fish selection\" class=\"\">\r\n\t\t\t\t\t\t<mat-chip class=\"me-3 cursor-pointer\" style=\"padding: 4px 10px !important; min-height: 24px;\" (click)=\"openPostLikeDialog(postShareResponse)\">\r\n\t\t\t\t\t\t\tLikes\r\n\t\t\t\t\t\t\t<span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary\">\r\n\t\t\t\t\t\t\t\t{{ postShareResponse.post.likeCount }}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</mat-chip>\r\n\t\t\t\t\t</mat-chip-list>\r\n\t\r\n\t\t\t\t\t<div style=\"margin-top: -40px; text-align: right\">\r\n\t\t\t\t\t\t<button mat-icon-button (click)=\"likeOrUnlikePostShare(postShareResponse.likedByAuthUser, postShareResponse)\">\r\n\t\t\t\t\t\t\t<mat-icon [ngClass]=\"postShareResponse.likedByAuthUser ? 'text-danger' : 'text-secondary'\">favorite</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\r\n\t\t<div class=\"mt-4 mb-3 text-center\" *ngIf=\"hasMoreResult\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"rounded-pill align-middle\" *ngIf=\"hasMoreResult && !(fetchingResult && resultPage > 1)\" (click)=\"loadPostShares(resultPage)\">Load More</button>\r\n\t\t\t<div *ngIf=\"fetchingResult && resultPage > 1\" class=\"d-inline-block\" style=\"transform: scale(0.3); margin-top: -33px;\">\r\n\t\t\t\t<mat-spinner style=\"margin: 0 auto;\"></mat-spinner>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\r\n\t\t<div *ngIf=\"fetchingResult && resultPage === 1\" class=\"position-absolute\" style=\"transform: scale(0.3); top: -35px; right: -35px;\">\r\n\t\t\t<mat-spinner></mat-spinner>\r\n\t\t</div>\r\n\t</div>\r\n</mat-dialog-content>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Input, Output, OnDestroy, OnInit, EventEmitter } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { PostResponse } from 'src/app/model/post-response';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { PostService } from 'src/app/service/post.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\r\nimport { PostCommentDialogComponent } from '../post-comment-dialog/post-comment-dialog.component';\r\nimport { PostDialogComponent } from '../post-dialog/post-dialog.component';\r\nimport { PostLikeDialogComponent } from '../post-like-dialog/post-like-dialog.component';\r\nimport { PostShareDialogComponent } from '../post-share-dialog/post-share-dialog.component';\r\nimport { ShareConfirmDialogComponent } from '../share-confirm-dialog/share-confirm-dialog.component';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\nimport { WaitingDialogComponent } from '../waiting-dialog/waiting-dialog.component';\r\n\r\n@Component({\r\n\tselector: 'app-post',\r\n\ttemplateUrl: './post.component.html',\r\n\tstyleUrls: ['./post.component.css']\r\n})\r\nexport class PostComponent implements OnInit, OnDestroy {\r\n\t@Input() postResponse: PostResponse;\r\n\t@Input() isDetailedPost: boolean;\r\n\t@Output() postDeletedEvent = new EventEmitter<PostResponse>();\r\n\tauthUserId: number;\r\n\tdefaultProfilePhotoUrl = environment.defaultProfilePhotoUrl;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate matDialog: MatDialog,\r\n\t\tprivate matSnackbar: MatSnackBar,\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate postService: PostService) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.authUserId = this.authService.getAuthUserId();\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\topenLikeDialog(): void {\r\n\t\tthis.matDialog.open(PostLikeDialogComponent, {\r\n\t\t\tdata: this.postResponse.post,\r\n\t\t\tminWidth: '400px',\r\n\t\t\tmaxWidth: '700px'\r\n\t\t});\r\n\t}\r\n\r\n\topenCommentDialog(): void {\r\n\t\tconst dialogRef = this.matDialog.open(PostCommentDialogComponent, {\r\n\t\t\tdata: this.postResponse.post,\r\n\t\t\tautoFocus: false,\r\n\t\t\tminWidth: '500px',\r\n\t\t\tmaxWidth: '700px'\r\n\t\t});\r\n\r\n\t\tdialogRef.componentInstance.updatedCommentCountEvent.subscribe(\r\n\t\t\tdata => this.postResponse.post.commentCount = data\r\n\t\t);\r\n\t}\r\n\r\n\topenShareDialog(): void {\r\n\t\tconst dialogRef = this.matDialog.open(PostShareDialogComponent, {\r\n\t\t\tdata: this.postResponse.post,\r\n\t\t\tautoFocus: false,\r\n\t\t\tminWidth: '500px',\r\n\t\t\tmaxWidth: '700px'\r\n\t\t});\r\n\t}\r\n\r\n\topenShareConfirmDialog(): void {\r\n\t\tthis.matDialog.open(ShareConfirmDialogComponent, {\r\n\t\t\tdata: this.postResponse.post,\r\n\t\t\tautoFocus: false,\r\n\t\t\tminWidth: '500px',\r\n\t\t\tmaxWidth: '700px'\r\n\t\t});\r\n\t}\r\n\r\n\topenPostEditDialog(): void {\r\n\t\tconst dialogRef = this.matDialog.open(PostDialogComponent, {\r\n\t\t\tdata: this.postResponse.post,\r\n\t\t\tautoFocus: false,\r\n\t\t\tminWidth: '500px',\r\n\t\t\tmaxWidth: '900px'\r\n\t\t});\r\n\t}\r\n\r\n\topenPostDeleteConfirmDialog(): void {\r\n\t\tconst dialogRef = this.matDialog.open(ConfirmationDialogComponent, {\r\n\t\t\tdata: 'Do you want to delete this post permanently?',\r\n\t\t\tautoFocus: false,\r\n\t\t\twidth: '500px'\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(\r\n\t\t\tresult => {\r\n\t\t\t\tif (result) this.deletePost(this.postResponse.post.id, this.postResponse.post.isTypeShare);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tdeletePost(postId: number, isTypeShare: boolean): void {\r\n\t\tconst dialogRef = this.matDialog.open(WaitingDialogComponent, {\r\n\t\t\tdata: 'Please, wait while we are deleting the post.',\r\n\t\t\twidth: '500px',\r\n\t\t\tdisableClose: true\r\n\t\t});\r\n\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.postService.deletePost(postId, isTypeShare).subscribe({\r\n\t\t\t\tnext: (response: any) => {\r\n\t\t\t\t\tthis.postDeletedEvent.emit(this.postResponse);\r\n\t\t\t\t\tdialogRef.close();\r\n\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\tdata: 'Post deleted successfully.',\r\n\t\t\t\t\t\tpanelClass: ['bg-success'],\r\n\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdialogRef.close();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tlikeOrUnlikePost(likedByAuthUser: boolean) {\r\n\t\tif (likedByAuthUser) {\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.postService.unlikePost(this.postResponse.post.id).subscribe({\r\n\t\t\t\t\tnext: (response: any) => {\r\n\t\t\t\t\t\tthis.postResponse.likedByAuthUser = false;\r\n\t\t\t\t\t\tthis.postResponse.post.likeCount--;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.postService.likePost(this.postResponse.post.id).subscribe({\r\n\t\t\t\t\tnext: (response: any) => {\r\n\t\t\t\t\t\tthis.postResponse.likedByAuthUser = true;\r\n\t\t\t\t\t\tthis.postResponse.post.likeCount++;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n","<mat-card class=\"position-relative mat-elevation-z3 mb-4\" *ngIf=\"postResponse\">\r\n\t<mat-card-header>\r\n\t\t<div mat-card-avatar class=\"centered-bg-image\"\r\n\t\t\tstyle=\"background-image: url('{{ postResponse.post.author.profilePhoto ? postResponse.post.author.profilePhoto : defaultProfilePhotoUrl }}');\">\r\n\t\t</div>\r\n\t\t<mat-card-title>\r\n\t\t\t<a href=\"/users/{{ postResponse.post.author.id }}\" class=\"text-decoration-none text-dark\">\r\n\t\t\t\t{{ postResponse.post.author.firstName + ' ' + postResponse.post.author.lastName }}\r\n\t\t\t</a>\r\n\t\t</mat-card-title>\r\n\t\t<mat-card-subtitle>\r\n\t\t\t<mat-icon class=\"align-middle w-auto h-auto\" style=\"font-size: 16px;\">watch_later</mat-icon>\r\n\t\t\t<span class=\"align-middle ps-1 small fw-500\">{{ postResponse.post.dateCreated | date:'medium' }}</span>\r\n\t\t</mat-card-subtitle>\r\n\t</mat-card-header>\r\n\r\n\t<div align=\"end\" style=\"position: absolute; top: 10px; right: 10px\"\r\n\t\t*ngIf=\"postResponse.post.author.id === authUserId\">\r\n\t\t<button mat-icon-button [matMenuTriggerFor]=\"coverPhotoMenu\">\r\n\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t</button>\r\n\t\t<mat-menu #coverPhotoMenu=\"matMenu\">\r\n\t\t\t<button mat-menu-item (click)=\"openPostEditDialog()\">\r\n\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\tEdit Post\r\n\t\t\t</button>\r\n\t\t\t<button mat-menu-item (click)=\"openPostDeleteConfirmDialog()\">\r\n\t\t\t\t<mat-icon>delete_sweep</mat-icon>\r\n\t\t\t\tDelete Post\r\n\t\t\t</button>\r\n\t\t</mat-menu>\r\n\t</div>\r\n\r\n\t<img *ngIf=\"postResponse.post.postPhoto\" mat-card-image src=\"{{ postResponse.post.postPhoto }}\" alt=\"\">\r\n\r\n\t<mat-card-content class=\"mb-4\">\r\n\t\t<p class=\"p-2\" *ngIf=\"isDetailedPost && postResponse.post.content.length > 0\">\r\n\t\t\t{{ postResponse.post.content }}\r\n\t\t</p>\r\n\r\n\t\t<p class=\"p-2\" *ngIf=\"!isDetailedPost && postResponse.post.content.length > 0\">\r\n\t\t\t{{ postResponse.post.content.length > 128 ? (postResponse.post.content | slice:0:128) + '...' :\r\n\t\t\tpostResponse.post.content }}\r\n\t\t</p>\r\n\r\n\t\t<a class=\"text-decoration-none fw-500\" href=\"/posts/{{postResponse.post.id}}\"\r\n\t\t\t*ngIf=\"!isDetailedPost && postResponse.post.content.length > 128\">\r\n\t\t\tView Full Post\r\n\t\t</a>\r\n\r\n\t\t<div *ngIf=\"postResponse.post.postTags.length > 0\">\r\n\t\t\t<a *ngFor=\"let tag of postResponse.post.postTags\" href=\"/posts/tags/{{ tag.name }}\"\r\n\t\t\t class=\"text-decoration-none d-inline-block ms-0 mt-2 me-2 mb-0\">#{{ tag.name }}</a>\r\n\t\t</div>\t\r\n\r\n\t\t<div *ngIf=\"postResponse.post.isTypeShare\" class=\"mt-3 p-3 border border-1 rounded\">\r\n\t\t\t<div *ngIf=\"!postResponse.post.sharedPost\">\r\n\t\t\t\t<span class=\"badge rounded-pill bg-secondary\">Shared post has been deleted</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div *ngIf=\"postResponse.post.sharedPost\">\r\n\t\t\t\t<div class=\"rounded-circle d-inline-block align-middle centered-bg-image\"\r\n\t\t\t\t\tstyle=\"width: 35px; height: 35px; background-image: url('{{postResponse.post.sharedPost.author.profilePhoto ? postResponse.post.sharedPost.author.profilePhoto : defaultProfilePhotoUrl}}');\">\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"ps-5\" style=\"margin-top: -38px;\">\r\n\t\t\t\t\t<a class=\"d-inline-block text-decoration-none text-dark align-middle fw-500 cursor-pointer\"\r\n\t\t\t\t\t\thref=\"/users/{{ postResponse.post.sharedPost.author.id }}\">\r\n\t\t\t\t\t\t{{ postResponse.post.sharedPost.author.firstName + ' ' + postResponse.post.sharedPost.author.lastName }}\r\n\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t<br>\r\n\r\n\t\t\t\t\t<span class=\"text-secondary d-inline-block\">\r\n\t\t\t\t\t\t<mat-icon class=\"align-middle w-auto h-auto\" style=\"font-size: 16px;\">watch_later</mat-icon>\r\n\t\t\t\t\t\t<span class=\"align-middle ps-1 small fw-500\">\r\n\t\t\t\t\t\t\t{{ postResponse.post.sharedPost.dateCreated | date:'medium' }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img class=\"mt-3\" style=\"max-width: 100%;\" *ngIf=\"postResponse.post.sharedPost.postPhoto\"\r\n\t\t\t\t\t\t\tmat-card-image src=\"{{ postResponse.post.sharedPost.postPhoto }}\" alt=\"\">\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<p class=\"pt-2\" *ngIf=\"postResponse.post.sharedPost.content.length > 0\">{{\r\n\t\t\t\t\t\tpostResponse.post.sharedPost.content.length > 128 ? (postResponse.post.sharedPost.content |\r\n\t\t\t\t\t\tslice:0:128) + '...' : postResponse.post.sharedPost.content }}</p>\r\n\r\n\t\t\t\t\t<a class=\"text-decoration-none fw-500\" href=\"/posts/{{postResponse.post.sharedPost.id}}\">View Shared\r\n\t\t\t\t\t\tPost\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t</mat-card-content>\r\n\r\n\t<hr class=\"divider mb-4\">\r\n\r\n\t<mat-chip-list>\r\n\t\t<mat-chip class=\"me-3 cursor-pointer\"\r\n\t\t\tstyle=\"padding: 4px 10px !important; min-height: 28px;\" (click)=\"openLikeDialog()\">\r\n\t\t\tLikes\r\n\t\t\t<span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary\">\r\n\t\t\t\t{{ postResponse.post.likeCount }}\r\n\t\t\t</span>\r\n\t\t</mat-chip>\r\n\r\n\t\t<mat-chip class=\"me-3 cursor-pointer\"\r\n\t\t\tstyle=\"padding: 4px 10px !important; min-height: 28px;\" (click)=\"openCommentDialog()\">\r\n\t\t\tComments\r\n\t\t\t<span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary\">\r\n\t\t\t\t{{ postResponse.post.commentCount }}\r\n\t\t\t</span>\r\n\t\t</mat-chip>\r\n\r\n\t\t<mat-chip class=\"cursor-pointer\"\r\n\t\t\t*ngIf=\"!postResponse.post.isTypeShare\" style=\"padding: 4px 10px !important; min-height: 28px;\"\r\n\t\t\t(click)=\"openShareDialog()\">\r\n\t\t\tShares\r\n\t\t\t<span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary\">\r\n\t\t\t\t{{ postResponse.post.shareCount }}\r\n\t\t\t</span>\r\n\t\t</mat-chip>\r\n\t</mat-chip-list>\r\n\r\n\t<mat-card-actions align=\"end\" style=\"margin-top: -50px !important; padding-bottom: 20px;\">\r\n\t\t<button class=\"me-2\" mat-icon-button matTooltip=\"{{postResponse.likedByAuthUser ? 'Unlike' : 'Like'}}\"\r\n\t\t\t(click)=\"likeOrUnlikePost(postResponse.likedByAuthUser)\">\r\n\t\t\t<mat-icon [ngClass]=\"postResponse.likedByAuthUser ? 'text-danger' : 'text-secondary'\">favorite</mat-icon>\r\n\t\t</button>\r\n\r\n\t\t<button mat-icon-button matTooltip=\"Share\" *ngIf=\"!postResponse.post.isTypeShare || postResponse.post.sharedPost\" (click)=\"openShareConfirmDialog()\">\r\n\t\t\t<mat-icon class=\"text-secondary\">share</mat-icon>\r\n\t\t</button>\r\n\t</mat-card-actions>\r\n</mat-card>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { PostResponse } from 'src/app/model/post-response';\r\nimport { User } from 'src/app/model/user';\r\nimport { UserResponse } from 'src/app/model/user-response';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\r\nimport { FollowingFollowerListDialogComponent } from '../following-follower-list-dialog/following-follower-list-dialog.component';\r\nimport { PhotoUploadDialogComponent } from '../photo-upload-dialog/photo-upload-dialog.component';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\nimport { ViewPhotoDialogComponent } from '../view-photo-dialog/view-photo-dialog.component';\r\n\r\n@Component({\r\n\tselector: 'app-profile',\r\n\ttemplateUrl: './profile.component.html',\r\n\tstyleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit, OnDestroy {\r\n\tauthUser: User;\r\n\tprofileUserId: number;\r\n\tprofileUser: User;\r\n\tprofileUserPostResponses: PostResponse[] = [];\r\n\tisProfileViewerOwner: boolean = false;\r\n\tviewerFollowsProfileUser: boolean = false;\r\n\tresultPage: number = 1;\r\n\tresultSize: number = 5;\r\n\thasMoreResult: boolean = true;\r\n\tfetchingResult: boolean = false;\r\n\tloadingProfile: boolean = false;\r\n\thasNoPost: boolean = false;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate userService: UserService,\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate matDialog: MatDialog,\r\n\t\tprivate matSnackbar: MatSnackBar) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tif (!this.authService.isUserLoggedIn()) {\r\n\t\t\tthis.router.navigateByUrl('/login');\r\n\t\t} else {\r\n\t\t\tthis.loadingProfile = true;\r\n\t\t\tthis.authUser = this.authService.getAuthUserFromCache();\r\n\r\n\t\t\tif (this.activatedRoute.snapshot.paramMap.get('userId') === null) {\r\n\t\t\t\tthis.isProfileViewerOwner = true;\r\n\t\t\t\tthis.profileUserId = this.authService.getAuthUserId();\r\n\t\t\t} else {\r\n\t\t\t\tthis.profileUserId = Number(this.activatedRoute.snapshot.paramMap.get('userId'));\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.userService.getUserById(this.profileUserId).subscribe({\r\n\t\t\t\t\tnext: (foundUserResponse: UserResponse) => {\r\n\t\t\t\t\t\tconst foundUser: User = foundUserResponse.user;\r\n\r\n\t\t\t\t\t\tif (foundUser.id === this.authUser.id) {\r\n\t\t\t\t\t\t\tthis.router.navigateByUrl('/profile');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.viewerFollowsProfileUser = foundUserResponse.followedByAuthUser;\r\n\r\n\t\t\t\t\t\tif (!foundUser.profilePhoto) {\r\n\t\t\t\t\t\t\tfoundUser.profilePhoto = environment.defaultProfilePhotoUrl\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\tif (!foundUser.coverPhoto) {\r\n\t\t\t\t\t\t\tfoundUser.coverPhoto = environment.defaultCoverPhotoUrl\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.profileUser = foundUser;\r\n\r\n\t\t\t\t\t\tthis.loadProfilePosts(1);\r\n\r\n\t\t\t\t\t\tthis.loadingProfile = false;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageTypeLabel, AppConstants.errorLabel);\r\n\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageHeaderLabel, AppConstants.notFoundErrorHeader);\r\n\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageDetailLabel, AppConstants.notFoundErrorDetail);\r\n\t\t\t\t\t\tlocalStorage.setItem(AppConstants.toLoginLabel, AppConstants.falseLabel);\r\n\t\t\t\t\t\tthis.loadingProfile = false;\r\n\t\t\t\t\t\tthis.router.navigateByUrl('/message');\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\tstopPropagation(e: Event): void {\r\n\t\te.stopPropagation();\r\n\t}\r\n\r\n\tloadProfilePosts(currentPage: number): void {\r\n\t\tif (!this.fetchingResult) {\r\n\t\t\tthis.fetchingResult = true;\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.userService.getUserPosts(this.profileUserId, currentPage, this.resultSize).subscribe({\r\n\t\t\t\t\tnext: (postResponses: PostResponse[]) => {\r\n\t\t\t\t\t\tpostResponses.forEach(post => this.profileUserPostResponses.push(post));\r\n\t\t\t\t\t\tif (postResponses.length <= 0 && this.resultPage === 1)  this.hasNoPost = true;\r\n\t\t\t\t\t\tif (postResponses.length <= 0) this.hasMoreResult = false;\r\n\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\tthis.resultPage++;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\topenFollowingDialog(user: User): void {\r\n\t\tthis.matDialog.open(FollowingFollowerListDialogComponent, {\r\n\t\t\tdata: {\r\n\t\t\t\tuser,\r\n\t\t\t\ttype: 'following'\r\n\t\t\t},\r\n\t\t\tautoFocus: false,\r\n\t\t\tminWidth: '400px',\r\n\t\t\tmaxWidth: '500px'\r\n\t\t});\r\n\t}\r\n\r\n\topenFollowerDialog(user: User): void {\r\n\t\tthis.matDialog.open(FollowingFollowerListDialogComponent, {\r\n\t\t\tdata: {\r\n\t\t\t\tuser,\r\n\t\t\t\ttype: 'follower'\r\n\t\t\t},\r\n\t\t\tautoFocus: false,\r\n\t\t\tminWidth: '400px',\r\n\t\t\tmaxWidth: '500px'\r\n\t\t});\r\n\t}\r\n\r\n\topenViewPhotoDialog(photoUrl: string): void {\r\n\t\tthis.matDialog.open(ViewPhotoDialogComponent, {\r\n\t\t\tdata: photoUrl,\r\n\t\t\tautoFocus: false,\r\n\t\t\tmaxWidth: '1200px'\r\n\t\t});\r\n\t}\r\n\r\n\topenFollowConfirmDialog(userId: number): void {\r\n\t\tconst dialogRef = this.matDialog.open(ConfirmationDialogComponent, {\r\n\t\t\tdata: `Do you want to follow ${this.profileUser.firstName + ' ' + this.profileUser.lastName}?`,\r\n\t\t\tautoFocus: false,\r\n\t\t\tmaxWidth: '500px'\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(\r\n\t\t\t(result) => {\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\t\tthis.userService.followUser(userId).subscribe({\r\n\t\t\t\t\t\t\tnext: (response: any) => {\r\n\t\t\t\t\t\t\t\tthis.viewerFollowsProfileUser = true;\r\n\t\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\t\tdata: `You are following ${this.profileUser.firstName + ' ' + this.profileUser.lastName}.`,\r\n\t\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\topenUnfollowConfirmDialog(userId: number): void {\r\n\t\tconst dialogRef = this.matDialog.open(ConfirmationDialogComponent, {\r\n\t\t\tdata: `Do you want to stop following ${this.profileUser.firstName + ' ' + this.profileUser.lastName}?`,\r\n\t\t\tautoFocus: false,\r\n\t\t\tmaxWidth: '500px'\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(\r\n\t\t\t(result) => {\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\t\tthis.userService.unfollowUser(userId).subscribe({\r\n\t\t\t\t\t\t\tnext: (response: any) => {\r\n\t\t\t\t\t\t\t\tthis.viewerFollowsProfileUser = false;\r\n\t\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\t\tdata: `You no longer follow ${this.profileUser.firstName + ' ' + this.profileUser.lastName}.`,\r\n\t\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\topenPhotoUploadDialog(e: Event, uploadType: string): void {\r\n\t\te.stopPropagation();\r\n\r\n\t\tlet header: string;\r\n\t\tif (uploadType === 'profilePhoto') {\r\n\t\t\theader = 'Upload Profile Photo';\r\n\t\t} else if (uploadType === 'coverPhoto') {\r\n\t\t\theader = 'Upload Cover Photo';\r\n\t\t}\r\n\r\n\t\tconst dialogRef = this.matDialog.open(PhotoUploadDialogComponent, {\r\n\t\t\tdata: { authUser: this.authUser, uploadType, header },\r\n\t\t\tautoFocus: false,\r\n\t\t\tminWidth: '300px',\r\n\t\t\tmaxWidth: '900px',\r\n\t\t\tmaxHeight: '500px'\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(result => {\r\n\t\t\tif (result) {\r\n\t\t\t\tif (uploadType === 'profilePhoto') {\r\n\t\t\t\t\tthis.profileUser.profilePhoto = result.updatedUser.profilePhoto;\r\n\t\t\t\t} else if (uploadType === 'coverPhoto') {\r\n\t\t\t\t\tthis.profileUser.coverPhoto = result.updatedUser.coverPhoto;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\thandlePostDeletedEvent(postResponse: PostResponse): void {\r\n\t\tdocument.getElementById(`profilePost${postResponse.post.id}`).remove();\r\n\t}\r\n}\r\n","<div class=\"text-center fully-centered\" *ngIf=\"loadingProfile\">\r\n\t<mat-spinner style=\"zoom: 0.5;\" class=\"text-center ms-auto me-auto\"></mat-spinner>\r\n</div>\r\n\r\n<div class=\"profile-header\" style=\"margin-top: 64px\" *ngIf=\"!loadingProfile\">\r\n\t<div class=\"container\">\r\n\t\t<div class=\"row justify-content-center\">\r\n\t\t\t<div class=\"col-10\">\r\n\t\t\t\t<div class=\"profile-cover-photo centered-bg-image mat-elevation-z5 cursor-pointer\" (click)=\"openViewPhotoDialog(profileUser.coverPhoto)\"\r\n\t\t\t\t\tstyle=\"height: 300px; background-image: url('{{profileUser.coverPhoto}}')\">\r\n\t\t\t\t\t<div align=\"end\" class=\"float-end\" style=\"margin-top: 10px; margin-right: 10px\" *ngIf=\"isProfileViewerOwner\" (click)=\"openPhotoUploadDialog($event, 'coverPhoto')\">\r\n\t\t\t\t\t\t<button mat-mini-fab color=\"basic\">\r\n\t\t\t\t\t\t\t<mat-icon class=\"text-secondary\">upload</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"row justify-content-center\">\r\n\t\t\t<div class=\"col-10\">\r\n\t\t\t\t<div class=\" bg-white position-relative p-5 mat-elevation-z3 rounded-bottom\">\r\n\t\t\t\t\t<div class=\"profile-picture centered-bg-image d-inline-block border border-5 border-white rounded-3 cursor-pointer mat-elevation-z3 p-0\"  (click)=\"openViewPhotoDialog(profileUser.profilePhoto)\"\r\n\t\t\t\t\t\tstyle=\"margin-top: -100px; height: 180px; width: 180px; background-color: white; background-image: url('{{profileUser.profilePhoto}}');\">\r\n\t\t\t\t\t\t<div align=\"end\" class=\"float-end\" style=\"margin-top: -20px; margin-right: -20px\" *ngIf=\"isProfileViewerOwner\"  (click)=\"openPhotoUploadDialog($event, 'profilePhoto')\">\r\n\t\t\t\t\t\t\t<button mat-mini-fab color=\"basic\">\r\n\t\t\t\t\t\t\t\t<mat-icon class=\"text-secondary\">upload</mat-icon>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"profile-info d-inline-block align-top ps-3\" style=\"margin-top: -30px\">\r\n\t\t\t\t\t\t<h1 class=\"mat-display-1 mb-3\" style=\"font-weight: 500;\">\r\n\t\t\t\t\t\t\t{{ profileUser.firstName + ' ' + profileUser.lastName }}\r\n\t\t\t\t\t\t</h1>\r\n\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<a class=\"text-decoration-none text-secondary mat-h3 cursor-pointer\" style=\"font-weight: 500;\" (click)=\"openFollowingDialog(profileUser)\">\r\n\t\t\t\t\t\t\t\t{{ profileUser.followingCount }} Following\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t<span class=\"ps-2 pe-2 mat-h3 fw-bold\">|</span>\r\n\t\t\t\t\t\t\t<a class=\"text-decoration-none text-secondary mat-h3 cursor-pointer\" style=\"font-weight: 500;\" (click)=\"openFollowerDialog(profileUser)\">\r\n\t\t\t\t\t\t\t\t{{ profileUser.followerCount }} Follower\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style=\"position: absolute; right: 30px; top: 30px;\" *ngIf=\"!isProfileViewerOwner\">\r\n\t\t\t\t\t\t<button mat-raised-button color=\"primary\" *ngIf=\"!viewerFollowsProfileUser\" (click)=\"openFollowConfirmDialog(profileUser.id)\">Follow</button>\r\n\t\t\t\t\t\t<button mat-raised-button color=\"warn\" *ngIf=\"viewerFollowsProfileUser\" (click)=\"openUnfollowConfirmDialog(profileUser.id)\">Unfollow</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"row justify-content-center mt-5\">\r\n\t\t\t<div class=\"col-4\">\r\n\t\t\t\t<div class=\"profile-sidebar position-sticky bg-white rounded mat-elevation-z3 p-3 mb-5\" style=\"top: 64px;\">\r\n\t\t\t\t\t<p class=\"text-center ps-2 pt-3 pe-2 pb-0\" *ngIf=\"profileUser.intro\">\r\n\t\t\t\t\t\t{{ profileUser.intro }}\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t<mat-list>\r\n\t\t\t\t\t\t<div *ngIf=\"profileUser.email\">\r\n\t\t\t\t\t\t\t<mat-list-item>\r\n\t\t\t\t\t\t\t\t<mat-icon class=\"text-secondary\">email</mat-icon>\r\n\t\t\t\t\t\t\t\t<span class=\"fw-500 ps-3 small\">Email <b>{{ profileUser.email }}</b></span>\r\n\t\t\t\t\t\t\t</mat-list-item>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div *ngIf=\"profileUser.workplace\">\r\n\t\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\r\n\t\t\t\t\t\t\t<mat-list-item>\r\n\t\t\t\t\t\t\t\t<mat-icon class=\"text-secondary\">work</mat-icon>\r\n\t\t\t\t\t\t\t\t<span class=\"fw-500 ps-3 small\">Works At <b>{{ profileUser.workplace }}</b></span>\r\n\t\t\t\t\t\t\t</mat-list-item>\r\n\t\r\n\t\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div *ngIf=\"profileUser.eduInstitution\">\r\n\t\t\t\t\t\t\t<mat-list-item>\r\n\t\t\t\t\t\t\t\t<mat-icon class=\"text-secondary\">school</mat-icon>\r\n\t\t\t\t\t\t\t\t<span class=\"fw-500 ps-3 small\">Studied At <b>{{ profileUser.eduInstitution }}</b></span>\r\n\t\t\t\t\t\t\t</mat-list-item>\r\n\t\r\n\t\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div *ngIf=\"profileUser.hometown\">\r\n\t\t\t\t\t\t\t<mat-list-item *ngIf=\"profileUser.hometown\">\r\n\t\t\t\t\t\t\t\t<mat-icon class=\"text-secondary\">home</mat-icon>\r\n\t\t\t\t\t\t\t\t<span class=\"fw-500 ps-3 small\">From <b>{{ profileUser.hometown }}</b></span>\r\n\t\t\t\t\t\t\t</mat-list-item>\r\n\t\r\n\t\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div *ngIf=\"profileUser.currentCity\">\r\n\t\t\t\t\t\t\t<mat-list-item>\r\n\t\t\t\t\t\t\t\t<mat-icon class=\"text-secondary\">person_pin_circle</mat-icon>\r\n\t\t\t\t\t\t\t\t<span class=\"fw-500 ps-3 small\">Lives In <b>{{ profileUser.currentCity}}</b></span>\r\n\t\t\t\t\t\t\t</mat-list-item>\r\n\t\r\n\t\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div *ngIf=\"profileUser.country\">\r\n\t\t\t\t\t\t\t<mat-list-item>\r\n\t\t\t\t\t\t\t\t<mat-icon class=\"text-secondary\">place</mat-icon>\r\n\t\t\t\t\t\t\t\t<span class=\"fw-500 ps-3 small\">Country <b>{{ profileUser.country.name }}</b></span>\r\n\t\t\t\t\t\t\t</mat-list-item>\r\n\t\r\n\t\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div *ngIf=\"profileUser.gender\">\r\n\t\t\t\t\t\t\t<mat-list-item>\r\n\t\t\t\t\t\t\t\t<mat-icon class=\"text-secondary\"><mat-icon>account_circle</mat-icon></mat-icon>\r\n\t\t\t\t\t\t\t\t<span class=\"fw-500 ps-3 small\">Gender <b>{{ profileUser.gender }}</b></span>\r\n\t\t\t\t\t\t\t</mat-list-item>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</mat-list>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"col-6 mb-4\">\r\n\t\t\t\t<div class=\"profile-posts\">\r\n\t\t\t\t\t<app-post *ngFor=\"let postResponse of profileUserPostResponses\" id=\"{{'profilePost' + postResponse.post.id}}\" [postResponse]=\"postResponse\" [isDetailedPost]=\"false\" (postDeletedEvent)=\"handlePostDeletedEvent($event)\"></app-post>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"text-center mt-3\">\r\n\t\t\t\t\t<button mat-raised-button color=\"primary\" class=\"mat-btn-lg rounded-pill\" *ngIf=\"hasMoreResult && !fetchingResult\" (click)=\"loadProfilePosts(resultPage)\">Load More</button>\r\n\t\t\t\t\t<mat-spinner style=\"transform: scale(0.3);\" class=\"text-center ms-auto me-auto\" *ngIf=\"fetchingResult\"></mat-spinner>\r\n\t\t\t\t\t<span class=\"fw-500\" *ngIf=\"hasNoPost\">No Post</span>\r\n\t\t\t\t\t<span class=\"fw-500\" *ngIf=\"!hasMoreResult && !hasNoPost\">No More Posts</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { RepeatPasswordMatcher } from 'src/app/common/repeat-password-matcher';\r\nimport { ResetPassword } from 'src/app/model/reset-password';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-reset-password',\r\n\ttemplateUrl: './reset-password.component.html',\r\n\tstyleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\r\n\ttoken: string;\r\n\tresetPasswordFormGroup: FormGroup;\r\n\tfetchingResult: boolean = false;\r\n\trepeatPasswordMatcher = new RepeatPasswordMatcher();\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate userService: UserService,\r\n\t\tprivate router: Router,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate matSnackbar: MatSnackBar,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate matDialog: MatDialog) { }\r\n\r\n\tget password() { return this.resetPasswordFormGroup.get('password') }\r\n\tget passwordRepeat() { return this.resetPasswordFormGroup.get('passwordRepeat') }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.token = this.activatedRoute.snapshot.paramMap.get('token');\r\n\r\n\t\tthis.resetPasswordFormGroup = this.formBuilder.group({\r\n\t\t\tpassword: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(32)]),\r\n\t\t\tpasswordRepeat: new FormControl('', [Validators.required])\r\n\t\t}, { validators: this.matchPasswords });\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\tmatchPasswords: ValidatorFn = (group: FormGroup): ValidationErrors | null => {\r\n\t\tconst password = group.get('password').value;\r\n\t\tconst passwordRepeat = group.get('passwordRepeat').value;\r\n\t\treturn password === passwordRepeat ? null : { passwordMissMatch: true }\r\n\t}\r\n\r\n\tresetPassword(): void {\r\n\t\tif (this.resetPasswordFormGroup.valid) {\r\n\t\t\tif (!this.fetchingResult) {\r\n\t\t\t\tthis.fetchingResult = true;\r\n\t\t\t\tconst resetPassword = new ResetPassword();\r\n\t\t\t\tresetPassword.password = this.password?.value;\r\n\t\t\t\tresetPassword.passwordRepeat = this.passwordRepeat?.value;\r\n\r\n\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\tthis.userService.resetPassword(this.token, resetPassword).subscribe({\r\n\t\t\t\t\t\tnext: (result: any) => {\r\n\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\tdata: 'Your password has been changed successfully.',\r\n\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\t\tthis.router.navigateByUrl('/login');\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","<div class=\"mt-100 me-auto ms-auto pb-5\" style=\"width: 500px;\">\r\n\t<mat-card class=\"mat-elevation-z3\">\r\n\t\t<mat-card-title class=\"text-center ps-3 pt-5 pe-3\">Get A New Password</mat-card-title>\r\n\r\n\t\t<mat-card-content class=\"p-4\">\r\n\t\t\t<form [formGroup]=\"resetPasswordFormGroup\" (ngSubmit)=\"resetPassword()\">\r\n\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t<mat-label>Password</mat-label>\r\n\t\t\t\t\t<input type=\"password\" matInput formControlName=\"password\" placeholder=\"*************\">\r\n\t\t\t\t\t<mat-error *ngIf=\"password.hasError('required')\">\r\n\t\t\t\t\t\tPassword is <b>required</b>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"password.hasError('minlength', 'maxlength')\">\r\n\t\t\t\t\t\tPassword must be 6 to 32 characters long\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"password.hasError('serverError')\">\r\n\t\t\t\t\t\tPassword has to be alpha numeric and must include uppercase, lowercase, and special characters\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t<mat-label>Repeat Password</mat-label>\r\n\t\t\t\t\t<input type=\"password\" matInput formControlName=\"passwordRepeat\" placeholder=\"*************\" [errorStateMatcher]=\"repeatPasswordMatcher\">\r\n\t\t\t\t\t<mat-error *ngIf=\"passwordRepeat.hasError('required')\">\r\n\t\t\t\t\t\tPassword Repeat is <b>required</b>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"resetPasswordFormGroup.hasError('passwordMissMatch') || passwordRepeat.hasError('serverError')\">\r\n\t\t\t\t\t\tPassword did not match\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-card-actions align=\"end\" style=\"padding-right: 8px;\">\r\n\t\t\t\t\t<button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\r\n\t\t\t\t</mat-card-actions>\r\n\t\t\t</form>\r\n\t\t</mat-card-content>\r\n\r\n\t\t<mat-card-footer *ngIf=\"fetchingResult\">\r\n\t\t\t<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n\t\t</mat-card-footer>\r\n\t</mat-card>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { UserResponse } from 'src/app/model/user-response';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-search-dialog',\r\n\ttemplateUrl: './search-dialog.component.html',\r\n\tstyleUrls: ['./search-dialog.component.css']\r\n})\r\nexport class SearchDialogComponent implements OnInit, OnDestroy {\r\n\tsearchResult: UserResponse[] = [];\r\n\tsearchUserFormGroup: FormGroup;\r\n\tresultPage: number = 1;\r\n\tresultSize: number = 5;\r\n\thasMoreResult: boolean = false;\r\n\tnoResult: boolean = false;\r\n\tfetchingResult: boolean = false;\r\n\tdefaultProfilePhotoUrl: string = environment.defaultProfilePhotoUrl;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate userService: UserService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate matSnackbar: MatSnackBar,\r\n\t\tprivate matDialog: MatDialog,\r\n\t\tprivate router: Router) { }\r\n\r\n\tget key() { return this.searchUserFormGroup.get('key'); }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.searchUserFormGroup = this.formBuilder.group({\r\n\t\t\tkey: new FormControl('', [Validators.minLength(3), Validators.maxLength(64)])\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\tsearchUser(currentPage: number): void {\r\n\t\tif (!this.fetchingResult) {\r\n\t\t\tif (this.key.value.length >= 3) {\r\n\t\t\t\tthis.fetchingResult = true;\r\n\t\r\n\t\t\t\tif (currentPage === 1) this.searchResult = [];\r\n\t\r\n\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\tthis.userService.getUserSearchResult(this.key.value, currentPage, this.resultSize).subscribe({\r\n\t\t\t\t\t\tnext: (resultList: UserResponse[]) => {\r\n\t\t\t\t\t\t\tif (resultList.length <= 0 && currentPage === 1) {\r\n\t\t\t\t\t\t\t\tthis.noResult = true;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.noResult = false;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tresultList.forEach(uR => this.searchResult.push(uR));\r\n\t\t\t\t\t\t\tthis.resultPage++;\r\n\t\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\r\n\t\t\t\t\t\t\tif (resultList.length < this.resultSize) {\r\n\t\t\t\t\t\t\t\tthis.hasMoreResult = false;\r\n\t\t\t\t\t\t\t\tthis.resultPage = 1;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.hasMoreResult = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\tdata: 'Search key must be between 3 to 64 characters long.',\r\n\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\tduration: 5000\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n\r\n\topenFollowConfirmDialog(userResponse: UserResponse): void {\r\n\t\tconst dialogRef = this.matDialog.open(ConfirmationDialogComponent, {\r\n\t\t\tdata: `Do you want to follow this ${userResponse.user.firstName + ' ' + userResponse.user.lastName}?`,\r\n\t\t\tautoFocus: false,\r\n\t\t\tmaxWidth: '500px'\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(\r\n\t\t\t(result) => {\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\t\tthis.userService.followUser(userResponse.user.id).subscribe({\r\n\t\t\t\t\t\t\tnext: (response: any) => {\r\n\t\t\t\t\t\t\t\tconst targetResult = this.searchResult.find(uR => uR === userResponse);\r\n\t\t\t\t\t\t\t\ttargetResult.followedByAuthUser = true;\r\n\r\n\t\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\t\tdata: `You are now following ${userResponse.user.firstName + ' ' + userResponse.user.lastName}.`,\r\n\t\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\t\t\tpanelClass: 'bg-danger',\r\n\t\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\topenUnfollowConfirmDialog(userResponse: UserResponse): void {\r\n\t\tconst dialogRef = this.matDialog.open(ConfirmationDialogComponent, {\r\n\t\t\tdata: `Do you want to stop following ${userResponse.user.firstName + ' ' + userResponse.user.lastName}?`,\r\n\t\t\tautoFocus: false,\r\n\t\t\tmaxWidth: '500px'\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(\r\n\t\t\t(result) => {\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\t\tthis.userService.unfollowUser(userResponse.user.id).subscribe({\r\n\t\t\t\t\t\t\tnext: (response: any) => {\r\n\t\t\t\t\t\t\t\tconst targetResult = this.searchResult.find(uR => uR === userResponse);\r\n\t\t\t\t\t\t\t\ttargetResult.followedByAuthUser = false;\r\n\r\n\t\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\t\tdata: `You no longer follow ${userResponse.user.firstName + ' ' + userResponse.user.lastName}.`,\r\n\t\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\t\t\tpanelClass: 'bg-danger',\r\n\t\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n","<mat-dialog-content >\r\n\t<div class=\"position-relative\">\r\n\t\t<h2 class=\"mat-h2 m-0\">\r\n\t\t\tFind Someone\r\n\t\t</h2>\r\n\t\r\n\t\t<hr class=\"divider\">\r\n\t\r\n\t\t<form [formGroup]=\"searchUserFormGroup\" class=\"position-relative\" autocomplete=\"off\" (ngSubmit)=\"searchUser(1)\">\r\n\t\t\t<mat-form-field appearance=\"outline\" class=\"w-100\" style=\"padding-right: 90px;\">\r\n\t\t\t\t<mat-label>Who do you want to find?</mat-label>\r\n\t\t\t\t<input matInput formControlName=\"key\" placeholder=\"Who do you want to find?\">\r\n\t\t\t\t<mat-error *ngIf=\"key.hasError('minlength') || key.hasError('maxlength')\">\r\n\t\t\t\t\tMust be 3 to 64 characters\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<button mat-raised-button color=\"primary\" type=\"submit\" class=\"position-absolute\"\r\n\t\t\tstyle=\"top: 4px; right: 0;\">Search</button>\r\n\t\t</form>\r\n\t\r\n\t\t<div *ngIf=\"!noResult\">\r\n\t\t\t<ul class=\"list-group list-group-flush\">\r\n\t\t\t\t<li class=\"list-group-item ps-0 pt-2 pe-0 pb-2 border border-1 border-start-0 border-bottom-0 border-end-0\" *ngFor=\"let userResponse of searchResult\">\r\n\t\t\t\t\t<span class=\"rounded-circle d-inline-block align-middle centered-bg-image\"\r\n\t\t\t\t\t\tstyle=\"width: 35px; height: 35px; background-image: url('{{userResponse.user.profilePhoto ? userResponse.user.profilePhoto : defaultProfilePhotoUrl}}');\">\r\n\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t<a class=\"d-inline-block text-decoration-none text-dark align-middle ps-2 fw-500 cursor-pointer\"\r\n\t\t\t\t\t\thref=\"/users/{{userResponse.user.id}}\">{{userResponse.user.firstName + ' ' + userResponse.user.lastName}}</a>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button mat-stroked-button color=\"primary\" class=\"float-end rounded-pill\" *ngIf=\"!userResponse.followedByAuthUser\" (click)=\"openFollowConfirmDialog(userResponse)\">Follow</button>\r\n\t\t\t\t\t<button mat-stroked-button color=\"warn\" class=\"float-end rounded-pill\" *ngIf=\"userResponse.followedByAuthUser\" (click)=\"openUnfollowConfirmDialog(userResponse)\">Unfollow</button>\r\n\t\t\t\t</li>\r\n\r\n\t\t\t\t<span class=\"d-block border border-1 border-start-0 border-top-0 border-end-0\" *ngIf=\"searchResult.length > 0\"></span>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<div class=\"mt-3 mb-3\" *ngIf=\"hasMoreResult\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" class=\"rounded-pill align-middle\" *ngIf=\"hasMoreResult\" (click)=\"searchUser(resultPage)\">Load More</button>\r\n\t\t\t\t<div *ngIf=\"fetchingResult && resultPage > 1\" class=\"d-inline-block float-end\" style=\"transform: scale(0.3); margin-top: -33px;\">\r\n\t\t\t\t\t<mat-spinner style=\"margin: 0 auto;\"></mat-spinner>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div *ngIf=\"noResult\" class=\"text-center\">\r\n\t\t\tNo user found.\r\n\t\t</div>\r\n\t\r\n\t\t<div *ngIf=\"fetchingResult && resultPage === 1\" class=\"position-absolute\" style=\"transform: scale(0.3); top: -35px; right: -35px;\">\r\n\t\t\t<mat-spinner></mat-spinner>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</mat-dialog-content>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { Country } from 'src/app/model/country';\r\nimport { UpdateUserInfo } from 'src/app/model/update-user-info';\r\nimport { User } from 'src/app/model/user';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { CountryService } from 'src/app/service/country.service';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\nimport { RepeatPasswordMatcher } from 'src/app/common/repeat-password-matcher';\r\nimport { UpdateUserEmail } from 'src/app/model/update-user-email';\r\nimport { Router } from '@angular/router';\r\nimport { UpdateUserPassword } from 'src/app/model/update-user-password';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n\tselector: 'app-settings',\r\n\ttemplateUrl: './settings.component.html',\r\n\tstyleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit, OnDestroy {\r\n\tauthUser: User;\r\n\tauthUserId: number;\r\n\tsubmittingForm: boolean = false;\r\n\tcountryList: Country[] = [];\r\n\tupdateInfoFormGroup: FormGroup;\r\n\tupdateEmailFormGroup: FormGroup;\r\n\tupdatePasswordFormGroup: FormGroup;\r\n\trepeatPasswordMatcher = new RepeatPasswordMatcher();\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate userService: UserService,\r\n\t\tprivate countryService: CountryService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate matSnackbar: MatSnackBar,\r\n\t\tprivate router: Router) { }\r\n\r\n\tget updateInfoFirstName() { return this.updateInfoFormGroup.get('firstName') }\r\n\tget updateInfoLastName() { return this.updateInfoFormGroup.get('lastName') }\r\n\tget updateInfoIntro() { return this.updateInfoFormGroup.get('intro') }\r\n\tget updateInfoGender() { return this.updateInfoFormGroup.get('gender') }\r\n\tget updateInfoHometown() { return this.updateInfoFormGroup.get('hometown') }\r\n\tget updateInfoCurrentCity() { return this.updateInfoFormGroup.get('currentCity') }\r\n\tget updateInfoEduInstitution() { return this.updateInfoFormGroup.get('eduInstitution') }\r\n\tget updateInfoWorkplace() { return this.updateInfoFormGroup.get('workplace') }\r\n\tget updateInfoCountryName() { return this.updateInfoFormGroup.get('countryName') }\r\n\tget updateInfoBirthDate() { return this.updateInfoFormGroup.get('birthDate') }\r\n\r\n\tget updateEmailNewEmail() { return this.updateEmailFormGroup.get('email') }\r\n\tget updateEmailPassword() { return this.updateEmailFormGroup.get('password') }\r\n\r\n\tget updatePasswordNewPassword() { return this.updatePasswordFormGroup.get('password') }\r\n\tget updatePasswordPasswordRepeat() { return this.updatePasswordFormGroup.get('passwordRepeat') }\r\n\tget updatePasswordOldPassword() { return this.updatePasswordFormGroup.get('oldPassword') }\r\n\r\n\tmatchPasswords: ValidatorFn = (group: FormGroup): ValidationErrors | null => {\r\n\t\tconst password = group.get('password').value;\r\n\t\tconst passwordRepeat = group.get('passwordRepeat').value;\r\n\t\treturn password === passwordRepeat ? null : { passwordMissMatch: true }\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tif (!this.authService.isUserLoggedIn()) {\r\n\t\t\tthis.router.navigateByUrl('/login');\r\n\t\t} else {\r\n\t\t\tthis.authUser = this.authService.getAuthUserFromCache();\r\n\r\n\t\t\tthis.countryService.getCountryList().subscribe({\r\n\t\t\t\tnext: (countryList: Country[]) => {\r\n\t\t\t\t\tthis.countryList = countryList;\r\n\t\t\t\t},\r\n\t\t\t\terror: (errorResponse: HttpErrorResponse) => { }\r\n\t\t\t});\r\n\r\n\t\t\tthis.updateInfoFormGroup = this.formBuilder.group({\r\n\t\t\t\tfirstName: new FormControl(this.authUser.firstName, [Validators.required, Validators.maxLength(64)]),\r\n\t\t\t\tlastName: new FormControl(this.authUser.lastName, [Validators.required, Validators.maxLength(64)]),\r\n\t\t\t\tintro: new FormControl(this.authUser.intro, [Validators.maxLength(100)]),\r\n\t\t\t\thometown: new FormControl(this.authUser.hometown, [Validators.maxLength(128)]),\r\n\t\t\t\tcurrentCity: new FormControl(this.authUser.currentCity, [Validators.maxLength(128)]),\r\n\t\t\t\teduInstitution: new FormControl(this.authUser.eduInstitution, [Validators.maxLength(128)]),\r\n\t\t\t\tworkplace: new FormControl(this.authUser.workplace, [Validators.maxLength(128)]),\r\n\t\t\t\tgender: [this.authUser.gender],\r\n\t\t\t\tcountryName: [this.authUser.country ? this.authUser.country.name : null],\r\n\t\t\t\tbirthDate: [this.authUser.birthDate]\r\n\t\t\t});\r\n\r\n\t\t\tthis.updateEmailFormGroup = this.formBuilder.group({\r\n\t\t\t\temail: new FormControl(this.authUser.email, [Validators.required, Validators.email, Validators.maxLength(64)]),\r\n\t\t\t\tpassword: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(32)])\r\n\t\t\t});\r\n\r\n\t\t\tthis.updatePasswordFormGroup = this.formBuilder.group({\r\n\t\t\t\tpassword: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(32)]),\r\n\t\t\t\tpasswordRepeat: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(32)]),\r\n\t\t\t\toldPassword: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(32)])\r\n\t\t\t}, { validators: this.matchPasswords });\r\n\t\t}\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\thandleUpdateInfo(): void {\r\n\t\tthis.submittingForm = true;\r\n\t\tconst updateUserInfo = new UpdateUserInfo();\r\n\t\tupdateUserInfo.firstName = this.updateInfoFirstName.value;\r\n\t\tupdateUserInfo.lastName = this.updateInfoLastName.value;\r\n\t\tupdateUserInfo.intro = this.updateInfoIntro.value;\r\n\t\tupdateUserInfo.gender = this.updateInfoGender.value;\r\n\t\tupdateUserInfo.hometown = this.updateInfoHometown.value;\r\n\t\tupdateUserInfo.currentCity = this.updateInfoCurrentCity.value;\r\n\t\tupdateUserInfo.eduInstitution = this.updateInfoEduInstitution.value;\r\n\t\tupdateUserInfo.workplace = this.updateInfoWorkplace.value;\r\n\t\tupdateUserInfo.countryName = this.updateInfoCountryName.value;\r\n\t\tupdateUserInfo.birthDate = moment(this.updateInfoBirthDate.value).format('YYYY-MM-DD HH:mm:ss').toString();\r\n\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.userService.updateUserInfo(updateUserInfo).subscribe({\r\n\t\t\t\tnext: (updatedUser: User) => {\r\n\t\t\t\t\tthis.authService.storeAuthUserInCache(updatedUser);\r\n\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\tdata: 'Your account has been updated successfully.',\r\n\t\t\t\t\t\tpanelClass: ['bg-success'],\r\n\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.submittingForm = false;\r\n\t\t\t\t\tthis.router.navigateByUrl('/profile');\r\n\t\t\t\t},\r\n\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\tconst validationErrors = errorResponse.error.validationErrors;\r\n\t\t\t\t\tif (validationErrors != null) {\r\n\t\t\t\t\t\tObject.keys(validationErrors).forEach(key => {\r\n\t\t\t\t\t\t\tconst formControl = this.updateInfoFormGroup.get(key);\r\n\t\t\t\t\t\t\tif (formControl) {\r\n\t\t\t\t\t\t\t\tformControl.setErrors({\r\n\t\t\t\t\t\t\t\t\tserverError: validationErrors[key]\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.submittingForm = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\thandleUpdateEmail(): void {\r\n\t\tthis.submittingForm = true;\r\n\t\tconst updateUserEmail = new UpdateUserEmail();\r\n\t\tupdateUserEmail.email = this.updateEmailFormGroup.get('email').value;\r\n\t\tupdateUserEmail.password = this.updateEmailFormGroup.get('password').value;\r\n\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.userService.updateUserEmail(updateUserEmail).subscribe({\r\n\t\t\t\tnext: (result: any) => {\r\n\t\t\t\t\tlocalStorage.setItem(AppConstants.messageTypeLabel, AppConstants.successLabel);\r\n\t\t\t\t\tlocalStorage.setItem(AppConstants.messageHeaderLabel, AppConstants.emailChangeSuccessHeader);\r\n\t\t\t\t\tlocalStorage.setItem(AppConstants.messageDetailLabel, AppConstants.emailChangeSuccessDetail);\r\n\t\t\t\t\tlocalStorage.setItem(AppConstants.toLoginLabel, AppConstants.trueLabel);\r\n\t\t\t\t\tthis.authService.logout();\r\n\t\t\t\t\tthis.submittingForm = false;\r\n\t\t\t\t\tthis.router.navigateByUrl('/message');\r\n\t\t\t\t},\r\n\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\tconst validationErrors = errorResponse.error.validationErrors;\r\n\t\t\t\t\tif (validationErrors != null) {\r\n\t\t\t\t\t\tObject.keys(validationErrors).forEach(key => {\r\n\t\t\t\t\t\t\tconst formControl = this.updateInfoFormGroup.get(key);\r\n\t\t\t\t\t\t\tif (formControl) {\r\n\t\t\t\t\t\t\t\tformControl.setErrors({\r\n\t\t\t\t\t\t\t\t\tserverError: validationErrors[key]\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.submittingForm = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\thandleUpdatePassword(): void {\r\n\t\tthis.submittingForm = true;\r\n\t\tconst updateUserPassword = new UpdateUserPassword();\r\n\t\tupdateUserPassword.password = this.updatePasswordFormGroup.get('password').value;\r\n\t\tupdateUserPassword.passwordRepeat = this.updatePasswordFormGroup.get('passwordRepeat').value;\r\n\t\tupdateUserPassword.oldPassword = this.updatePasswordFormGroup.get('oldPassword').value;\r\n\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.userService.updateUserPassword(updateUserPassword).subscribe({\r\n\t\t\t\tnext: (result: any) => {\r\n\t\t\t\t\tlocalStorage.setItem(AppConstants.messageTypeLabel, AppConstants.successLabel);\r\n\t\t\t\t\tlocalStorage.setItem(AppConstants.messageHeaderLabel, AppConstants.passwordChangeSuccessHeader);\r\n\t\t\t\t\tlocalStorage.setItem(AppConstants.messageDetailLabel, AppConstants.passwordChangeSuccessDetail);\r\n\t\t\t\t\tlocalStorage.setItem(AppConstants.toLoginLabel, AppConstants.trueLabel);\r\n\t\t\t\t\tthis.authService.logout();\r\n\t\t\t\t\tthis.submittingForm = false;\r\n\t\t\t\t\tthis.router.navigateByUrl('/message');\r\n\t\t\t\t},\r\n\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\tconst validationErrors = errorResponse.error.validationErrors;\r\n\t\t\t\t\tif (validationErrors != null) {\r\n\t\t\t\t\t\tObject.keys(validationErrors).forEach(key => {\r\n\t\t\t\t\t\t\tconst formControl = this.updateInfoFormGroup.get(key);\r\n\t\t\t\t\t\t\tif (formControl) {\r\n\t\t\t\t\t\t\t\tformControl.setErrors({\r\n\t\t\t\t\t\t\t\t\tserverError: validationErrors[key]\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.submittingForm = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n","<div class=\"container\">\r\n\t<div class=\"row justify-content-center\">\r\n\t\t<div class=\"col-6\" style=\"margin-top: 110px;\">\r\n\t\t\t<div class=\"bg-white mat-elevation-z3 rounded mb-5\">\r\n\t\t\t\t<mat-tab-group mat-stretch-tabs dynamicHeight>\r\n\t\t\t\t\t<mat-tab label=\"Update Info\">\r\n\t\t\t\t\t\t<div class=\"p-5\">\r\n\t\t\t\t\t\t\t<form [formGroup]=\"updateInfoFormGroup\" (ngSubmit)=\"handleUpdateInfo()\">\r\n\t\t\t\t\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Say Something About You</mat-label>\r\n\t\t\t\t\t\t\t\t\t<textarea matInput formControlName=\"intro\" placeholder=\"Say Something About You\" cdkTextareaAutosize\r\n\t\t\t\t\t\t\t\t\t\tcdkAutosizeMinRows=\"2\" cdkAutosizeMaxRows=\"5\">\r\n\t\t\t\t\t\t\t\t\t</textarea>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updateInfoIntro.hasError('maxlength') || updateInfoIntro.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tCannot exceed 100 characters\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>First Name</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" matInput formControlName=\"firstName\" placeholder=\"Ex. John\">\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updateInfoFirstName.hasError('required') || updateInfoFirstName.hasError('maxlength') || updateInfoFirstName.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tThis field is required and cannot exceed 64 characters\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Last Name</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" matInput formControlName=\"lastName\" placeholder=\"Ex. Doe\">\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updateInfoLastName.hasError('required') || updateInfoLastName.hasError('maxlength') || updateInfoLastName.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tThis field is required and cannot exceed 64 characters\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Hometown</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" matInput formControlName=\"hometown\" placeholder=\"Ex. Dhaka\">\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updateInfoHometown.hasError('maxlength') || updateInfoHometown.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tCannot exceed 128 characters\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Current City</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" matInput formControlName=\"currentCity\" placeholder=\"Ex. Dhaka\">\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updateInfoCurrentCity.hasError('maxlength') || updateInfoCurrentCity.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tCannot exceed 128 characters\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>College/University</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" matInput formControlName=\"eduInstitution\" placeholder=\"Ex. University of XYZ\">\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updateInfoEduInstitution.hasError('maxlength') || updateInfoEduInstitution.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tCannot exceed 128 characters\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Workplace</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" matInput formControlName=\"workplace\" placeholder=\"Ex. Software Engineer at ABC Inc.\">\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updateInfoWorkplace.hasError('maxlength') || updateInfoWorkplace.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tCannot exceed 128 characters\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"d-block pb-2\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Select your birth date</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input formControlName=\"birthDate\" matInput [matDatepicker]=\"birthDatePicker\">\r\n\t\t\t\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"birthDatePicker\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t\t\t\t<mat-datepicker touchUi #birthDatePicker></mat-datepicker>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updateInfoBirthDate.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tEnter a valid birth\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" class=\"d-block pb-2\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Select your country</mat-label>\r\n\t\t\t\t\t\t\t\t\t<mat-select formControlName=\"countryName\">\r\n\t\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let country of countryList\" [value]=\"country.name\">\r\n\t\t\t\t\t\t\t\t\t\t{{ country.name }}\r\n\t\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updateInfoCountryName.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tEnter a valid country name\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t\t<mat-radio-group formControlName=\"gender\" class=\"d-block mb-2\">\r\n\t\t\t\t\t\t\t\t\t<mat-radio-button value=\"Male\" class=\"me-3\">Male</mat-radio-button>\r\n\t\t\t\t\t\t\t\t\t<mat-radio-button value=\"Female\">Female</mat-radio-button>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updateInfoGender.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tEnter a valid gender\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-radio-group>\r\n\r\n\t\t\t\t\t\t\t\t<span class=\"d-block mb-4 pb-2\"></span>\r\n\r\n\t\t\t\t\t\t\t\t<mat-card-actions>\r\n\t\t\t\t\t\t\t\t\t<button mat-raised-button color=\"primary\" type=\"submit\">Save Updates</button>\r\n\t\t\t\t\t\t\t\t</mat-card-actions>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<mat-progress-bar mode=\"indeterminate\" *ngIf=\"submittingForm\"></mat-progress-bar>\r\n\t\t\t\t\t</mat-tab>\r\n\r\n\t\t\t\t\t<mat-tab label=\"Update Email\">\r\n\t\t\t\t\t\t<div class=\"p-5\">\r\n\t\t\t\t\t\t\t<form [formGroup]=\"updateEmailFormGroup\" (ngSubmit)=\"handleUpdateEmail()\">\r\n\t\t\t\t\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>New Email</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" matInput formControlName=\"email\" placeholder=\"Ex. John\">\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updateEmailNewEmail.hasError('email') || updateEmailNewEmail.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tEnter a valid email address\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updateEmailNewEmail.hasError('required') || updateEmailNewEmail.hasError('maxlength')\">\r\n\t\t\t\t\t\t\t\t\t\tThis field is required and cannot exceed 64 characters\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Password</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"password\" matInput formControlName=\"password\" placeholder=\"*************\">\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updatePasswordNewPassword.hasError('required')\">\r\n\t\t\t\t\t\t\t\t\t\tPassword is <b>required</b>\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updatePasswordNewPassword.hasError('minlength', 'maxlength')\">\r\n\t\t\t\t\t\t\t\t\t\tPassword must be 6 to 32 characters long\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updatePasswordNewPassword.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tPassword has to be alpha numeric and must include uppercase, lowercase, and special characters\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t\t<mat-card-actions>\r\n\t\t\t\t\t\t\t\t\t<button mat-raised-button color=\"primary\" type=\"submit\">Change Email</button>\r\n\t\t\t\t\t\t\t\t</mat-card-actions>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<mat-progress-bar mode=\"indeterminate\" *ngIf=\"submittingForm\"></mat-progress-bar>\r\n\t\t\t\t\t</mat-tab>\r\n\r\n\t\t\t\t\t<mat-tab label=\"Update Password\">\r\n\t\t\t\t\t\t<div class=\"p-5\">\r\n\t\t\t\t\t\t\t<form [formGroup]=\"updatePasswordFormGroup\" (ngSubmit)=\"handleUpdatePassword()\">\r\n\t\t\t\t\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>New Password</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"password\" matInput formControlName=\"password\" placeholder=\"*************\">\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updatePasswordNewPassword.hasError('required')\">\r\n\t\t\t\t\t\t\t\t\t\tPassword is <b>required</b>\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updatePasswordNewPassword.hasError('minlength', 'maxlength')\">\r\n\t\t\t\t\t\t\t\t\t\tPassword must be 6 to 32 characters long\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updatePasswordNewPassword.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tPassword has to be alpha numeric and must include uppercase, lowercase, and special characters\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Repeat New Password</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"password\" matInput formControlName=\"passwordRepeat\" placeholder=\"*************\" [errorStateMatcher]=\"repeatPasswordMatcher\">\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updatePasswordPasswordRepeat.hasError('required')\">\r\n\t\t\t\t\t\t\t\t\t\tPassword Repeat is <b>required</b>\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updatePasswordFormGroup.hasError('passwordMissMatch') || updatePasswordPasswordRepeat.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tPassword did not match\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t\t<mat-form-field class=\"w-100 pb-3\" appearance=\"outline\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Old Password</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"password\" matInput formControlName=\"oldPassword\" placeholder=\"*************\">\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updatePasswordOldPassword.hasError('required')\">\r\n\t\t\t\t\t\t\t\t\t\tPassword is <b>required</b>\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updatePasswordOldPassword.hasError('minlength', 'maxlength')\">\r\n\t\t\t\t\t\t\t\t\t\tPassword must be 6 to 32 characters long\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"updatePasswordOldPassword.hasError('serverError')\">\r\n\t\t\t\t\t\t\t\t\t\tPassword has to be alpha numeric and must include uppercase, lowercase, and special characters\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t\t<mat-card-actions>\r\n\t\t\t\t\t\t\t\t\t<button mat-raised-button color=\"primary\" type=\"submit\">Change Password</button>\r\n\t\t\t\t\t\t\t\t</mat-card-actions>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<mat-progress-bar mode=\"indeterminate\" *ngIf=\"submittingForm\"></mat-progress-bar>\r\n\t\t\t\t\t</mat-tab>\r\n\t\t\t\t</mat-tab-group>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { Post } from 'src/app/model/post';\r\nimport { PostService } from 'src/app/service/post.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-share-confirm-dialog',\r\n\ttemplateUrl: './share-confirm-dialog.component.html',\r\n\tstyleUrls: ['./share-confirm-dialog.component.css']\r\n})\r\nexport class ShareConfirmDialogComponent implements OnInit, OnDestroy {\r\n\ttargetPostId: number;\r\n\tshareFormGroup: FormGroup;\r\n\tcreatingShare: boolean = false;\r\n\tdefaultProfilePhotoUrl = environment.defaultProfilePhotoUrl;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\t@Inject(MAT_DIALOG_DATA) public dataPost: Post,\r\n\t\tprivate thisMatDialogRef: MatDialogRef<ShareConfirmDialogComponent>,\r\n\t\tprivate router: Router,\r\n\t\tprivate postService: PostService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate matSnackbar: MatSnackBar) { }\r\n\r\n\tget content() { return this.shareFormGroup.get('content'); }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.shareFormGroup = this.formBuilder.group({\r\n\t\t\tcontent: new FormControl('', [Validators.maxLength(4096)])\r\n\t\t});\r\n\r\n\t\tthis.targetPostId = this.dataPost.isTypeShare ? this.dataPost.sharedPost.id : this.dataPost.id;\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\tcreateNewPostShare(): void {\r\n\t\tif (!this.creatingShare) {\r\n\t\t\tthis.creatingShare = true;\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.postService.createPostShare(this.targetPostId, this.content.value).subscribe({\r\n\t\t\t\t\tnext: (newPostShare: Post) => {\r\n\t\t\t\t\t\tthis.thisMatDialogRef.close();\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: 'Post shared successfully.',\r\n\t\t\t\t\t\t\tpanelClass: ['bg-success'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.creatingShare = false;\r\n\t\t\t\t\t\tthis.router.navigateByUrl(`/posts/${newPostShare.id}`);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-error'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.creatingShare = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","<mat-dialog-content>\r\n\t<div class=\"position-relative\">\r\n\t\t<h2 class=\"mat-h2 m-0\">\r\n\t\t\tShare this post\r\n\t\t</h2>\r\n\t\t<hr class=\"divider\">\r\n\t\r\n\t\t<form [formGroup]=\"shareFormGroup\" (ngSubmit)=\"createNewPostShare()\"\r\n\t\t\tclass=\"position-relative\">\r\n\t\t\t<mat-form-field appearance=\"outline\" class=\"w-100\" style=\"padding-right: 90px;\">\r\n\t\t\t\t<mat-label>What do you want to say</mat-label>\r\n\t\t\t\t<textarea matInput formControlName=\"content\" placeholder=\"What do you want to say\"></textarea>\r\n\t\t\t\t<mat-error *ngIf=\"content.hasError('maxlength')\">\r\n\t\t\t\t\tCannot exceed 4096 characters\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<button mat-raised-button color=\"primary\" type=\"submit\" class=\"position-absolute\"\r\n\t\t\t\tstyle=\"top: 4px; right: 0;\">Share</button>\r\n\t\t</form>\r\n\r\n\t\t<div *ngIf=\"creatingShare\" class=\"position-absolute\" style=\"transform: scale(0.3); top: -35px; right: -35px;\">\r\n\t\t\t<mat-spinner></mat-spinner>\r\n\t\t</div>\r\n\t</div>\r\n</mat-dialog-content>","import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { RepeatPasswordMatcher } from 'src/app/common/repeat-password-matcher';\r\nimport { User } from 'src/app/model/user';\r\nimport { UserSignup } from 'src/app/model/user-signup';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-signup',\r\n\ttemplateUrl: './signup.component.html',\r\n\tstyleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit, OnDestroy {\r\n\trepeatPasswordMatcher = new RepeatPasswordMatcher();\r\n\tsubmittingForm: boolean = false;\r\n\tsignupFormGroup: FormGroup;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate router: Router,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate matSnackbar: MatSnackBar) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tif (this.authService.isUserLoggedIn()) {\r\n\t\t\tthis.router.navigateByUrl('/profile');\r\n\t\t}\r\n\r\n\t\tthis.signupFormGroup = this.formBuilder.group({\r\n\t\t\tinfoGroup: this.formBuilder.group({\r\n\t\t\t\tfirstName: new FormControl('',\r\n\t\t\t\t\t[Validators.required, Validators.maxLength(64)]\r\n\t\t\t\t),\r\n\t\t\t\tlastName: new FormControl('',\r\n\t\t\t\t\t[Validators.required, Validators.maxLength(64)]\r\n\t\t\t\t),\r\n\t\t\t\temail: new FormControl('',\r\n\t\t\t\t\t[Validators.required, Validators.email, Validators.maxLength(64)]\r\n\t\t\t\t)\r\n\t\t\t}),\r\n\t\t\tpasswordGroup: this.formBuilder.group({\r\n\t\t\t\tpassword: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(32)]),\r\n\t\t\t\tpasswordRepeat: new FormControl('', [Validators.required])\r\n\t\t\t})\r\n\t\t}, { validators: this.matchPasswords });\r\n\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\tget firstName() { return this.signupFormGroup.get('infoGroup.firstName') }\r\n\tget lastName() { return this.signupFormGroup.get('infoGroup.lastName') }\r\n\tget email() { return this.signupFormGroup.get('infoGroup.email') }\r\n\tget password() { return this.signupFormGroup.get('passwordGroup.password') }\r\n\tget passwordRepeat() { return this.signupFormGroup.get('passwordGroup.passwordRepeat') }\r\n\r\n\tmatchPasswords: ValidatorFn = (group: FormGroup): ValidationErrors | null => {\r\n\t\tconst password = group.get('passwordGroup.password').value;\r\n\t\tconst passwordRepeat = group.get('passwordGroup.passwordRepeat').value;\r\n\t\treturn password === passwordRepeat ? null : { passwordMissMatch: true }\r\n\t}\r\n\r\n\thandleSignup(): void {\r\n\t\tif (this.signupFormGroup.valid) {\r\n\t\t\tthis.submittingForm = true;\r\n\t\t\tconst userSignup = new UserSignup();\r\n\t\t\tuserSignup.firstName = this.firstName?.value;\r\n\t\t\tuserSignup.lastName = this.lastName?.value;\r\n\t\t\tuserSignup.email = this.email?.value;\r\n\t\t\tuserSignup.password = this.password?.value;\r\n\t\t\tuserSignup.passwordRepeat = this.passwordRepeat?.value;\r\n\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.authService.signup(userSignup).subscribe({\r\n\t\t\t\t\tnext: (response: HttpResponse<User>) => {\r\n\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageTypeLabel, AppConstants.successLabel);\r\n\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageHeaderLabel, AppConstants.signupSuccessHeader);\r\n\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageDetailLabel, AppConstants.signupSuccessDetail);\r\n\t\t\t\t\t\tlocalStorage.setItem(AppConstants.toLoginLabel, AppConstants.trueLabel);\r\n\t\t\t\t\t\tthis.submittingForm = false;\r\n\t\t\t\t\t\tthis.router.navigateByUrl('/message');\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tconst validationErrors = errorResponse.error.validationErrors;\r\n\t\t\t\t\t\tif (validationErrors != null) {\r\n\t\t\t\t\t\t\tObject.keys(validationErrors).forEach(key => {\r\n\t\t\t\t\t\t\t\tlet formGroup = 'infoGroup';\r\n\t\t\t\t\t\t\t\tif (key === 'password' || key === 'passwordRepeat') formGroup = 'passwordGroup';\r\n\t\t\t\t\t\t\t\tconst formControl = this.signupFormGroup.get(`${formGroup}.${key}`);\r\n\t\t\t\t\t\t\t\tif (formControl) {\r\n\t\t\t\t\t\t\t\t\tformControl.setErrors({\r\n\t\t\t\t\t\t\t\t\t\tserverError: validationErrors[key]\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.submittingForm = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n","<div class=\"mt-100 me-auto ms-auto pb-5\" style=\"width: 500px;\">\r\n\t<mat-card class=\"mat-elevation-z3\">\r\n\t\t<mat-card-title class=\"text-center ps-3 pt-5 pe-3\">Create A New Account</mat-card-title>\r\n\r\n\t\t<mat-card-content class=\"p-4\">\r\n\t\t\t<form [formGroup]=\"signupFormGroup\" (ngSubmit)=\"handleSignup()\">\r\n\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\" formGroupName=\"infoGroup\">\r\n\t\t\t\t\t<mat-label>First Name</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"firstName\" placeholder=\"Ex. John\">\r\n\t\t\t\t\t<mat-error *ngIf=\"firstName.hasError('required')\">\r\n\t\t\t\t\t\tFirst Name is <b>required</b>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"firstName.hasError('maxlength') || firstName.hasError('serverError')\">\r\n\t\t\t\t\t\tYour first name must be within 64 characters\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\" formGroupName=\"infoGroup\">\r\n\t\t\t\t\t<mat-label>Last Name</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"lastName\" placeholder=\"Ex. Doe\">\r\n\t\t\t\t\t<mat-error *ngIf=\"lastName.hasError('required')\">\r\n\t\t\t\t\t\tLast Name is <b>required</b>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"lastName.hasError('maxlength') || lastName.hasError('serverError')\">\r\n\t\t\t\t\t\tYour last name must be within 64 characters\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\" formGroupName=\"infoGroup\">\r\n\t\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"email\" placeholder=\"Ex. johndoe@example.com\">\r\n\t\t\t\t\t<mat-error *ngIf=\"email.hasError('required')\">\r\n\t\t\t\t\t\tEmail is <b>required</b>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"email.hasError('email') || email.hasError('serverError')\">\r\n\t\t\t\t\t\tPlease, enter a valid email address\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\" formGroupName=\"passwordGroup\">\r\n\t\t\t\t\t<mat-label>Password</mat-label>\r\n\t\t\t\t\t<input type=\"password\" matInput formControlName=\"password\" placeholder=\"*************\">\r\n\t\t\t\t\t<mat-error *ngIf=\"password.hasError('required')\">\r\n\t\t\t\t\t\tPassword is <b>required</b>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"password.hasError('minlength', 'maxlength')\">\r\n\t\t\t\t\t\tPassword must be 6 to 32 characters long\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"password.hasError('serverError')\">\r\n\t\t\t\t\t\tPassword has to be alpha numeric and must include uppercase, lowercase, and special characters\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field class=\"w-100 pb-2\" appearance=\"outline\" formGroupName=\"passwordGroup\">\r\n\t\t\t\t\t<mat-label>Repeat Password</mat-label>\r\n\t\t\t\t\t<input type=\"password\" matInput formControlName=\"passwordRepeat\" placeholder=\"*************\" [errorStateMatcher]=\"repeatPasswordMatcher\">\r\n\t\t\t\t\t<mat-error *ngIf=\"passwordRepeat.hasError('required')\">\r\n\t\t\t\t\t\tPassword Repeat is <b>required</b>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"signupFormGroup.hasError('passwordMissMatch') || passwordRepeat.hasError('serverError')\">\r\n\t\t\t\t\t\tPassword did not match\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<a routerLink=\"/login\" class=\"d-inline-block text-secondary text-decoration-none mt-3\">\r\n\t\t\t\t\tI already have an account.\r\n\t\t\t\t</a>\r\n\r\n\t\t\t\t<mat-card-actions align=\"end\" style=\"margin-top: -35px; padding-right: 8px;\">\r\n\t\t\t\t\t<button mat-raised-button color=\"primary\" type=\"submit\">Signup</button>\r\n\t\t\t\t</mat-card-actions>\r\n\t\t\t</form>\r\n\t\t</mat-card-content>\r\n\r\n\t\t<mat-card-footer *ngIf=\"submittingForm == true\">\r\n\t\t\t<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n\t\t</mat-card-footer>\r\n\t</mat-card>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n\tselector: 'app-snackbar',\r\n\ttemplateUrl: './snackbar.component.html',\r\n\tstyleUrls: ['./snackbar.component.css']\r\n})\r\nexport class SnackbarComponent implements OnInit {\r\n\r\n\tconstructor(@Inject(MAT_SNACK_BAR_DATA) public data: string) { }\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n}\r\n","<span class=\"fw-500\">{{ data }}</span>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n\tselector: 'app-tag-dialog',\r\n\ttemplateUrl: './tag-dialog.component.html',\r\n\tstyleUrls: ['./tag-dialog.component.css']\r\n})\r\nexport class TagDialogComponent implements OnInit {\r\n\ttagFormGroup: FormGroup;\r\n\r\n\tconstructor(\r\n\t\tprivate thisDialogRef: MatDialogRef<TagDialogComponent>,\r\n\t\tprivate formBuilder: FormBuilder) { }\r\n\r\n\tget name() { return this.tagFormGroup.get('name'); } \r\n\r\n\tngOnInit(): void {\r\n\t\tthis.tagFormGroup = this.formBuilder.group({\r\n\t\t\tname: new FormControl('', [Validators.minLength(3), Validators.maxLength(64)])\r\n\t\t});\r\n\t}\r\n\r\n\taddTag(e: Event): void {\r\n\t\te.preventDefault();\r\n\t\tthis.thisDialogRef.close({tagName: this.name.value});\r\n\t\tthis.tagFormGroup.reset();\r\n\t\tObject.keys(this.tagFormGroup.controls).forEach(key => {\r\n\t\t\tthis.tagFormGroup.get(key).setErrors(null) ;\r\n\t\t});\r\n\t}\r\n}\r\n","<mat-dialog-content >\r\n\t<div class=\"position-relative\">\r\n\t\t<h2 class=\"mat-h2 m-0\">\r\n\t\t\tAdd A Tag\r\n\t\t</h2>\r\n\t\r\n\t\t<hr class=\"divider\">\r\n\t\r\n\t\t<form [formGroup]=\"tagFormGroup\" class=\"position-relative\" autocomplete=\"off\" (ngSubmit)=\"addTag($event)\">\r\n\t\t\t<mat-form-field appearance=\"outline\" class=\"w-100\" style=\"padding-right: 90px;\">\r\n\t\t\t\t<mat-label>Type a tag name</mat-label>\r\n\t\t\t\t<input matInput formControlName=\"name\" placeholder=\"Type a tag name\">\r\n\t\t\t\t<mat-error *ngIf=\"name.hasError('minlength') || name.hasError('maxlength')\">\r\n\t\t\t\t\tMust be 3 to 64 characters\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<button mat-raised-button color=\"primary\" type=\"submit\" class=\"position-absolute\" style=\"top: 4px; right: 0;\">\r\n\t\t\t\tAdd\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t</div>\r\n\r\n</mat-dialog-content>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { noop, Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { PostResponse } from 'src/app/model/post-response';\r\nimport { Tag } from 'src/app/model/tag';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { PostService } from 'src/app/service/post.service';\r\nimport { TimelineService } from 'src/app/service/timeline.service';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n\tselector: 'app-timeline',\r\n\ttemplateUrl: './timeline.component.html',\r\n\tstyleUrls: ['./timeline.component.css']\r\n})\r\nexport class TimelineComponent implements OnInit, OnDestroy {\r\n\ttimelinePostResponseList: PostResponse[] = [];\r\n\ttimelineTagList: Tag[] = [];\r\n\tnoPost: boolean = false;\r\n\tresultPage: number = 1;\r\n\tresultSize: number = 5;\r\n\thasMoreResult: boolean = true;\r\n\tfetchingResult: boolean = false;\r\n\tisTaggedPostPage: boolean = false;\r\n\ttargetTagName: string;\r\n\tloadingTimelinePostsInitially: boolean = true;\r\n\tloadingTimelineTagsInitially: boolean = true;\r\n\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate timelineService: TimelineService,\r\n\t\tprivate postService: PostService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate matSnackbar: MatSnackBar) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tif (!this.authService.isUserLoggedIn()) {\r\n\t\t\tthis.router.navigateByUrl('/login');\r\n\t\t} else {\r\n\t\t\tif (this.router.url !== '/') {\r\n\t\t\t\tthis.targetTagName = this.activatedRoute.snapshot.paramMap.get('tagName');\r\n\t\t\t\tthis.isTaggedPostPage = true;\r\n\t\t\t\tthis.loadTaggedPosts(this.targetTagName, 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis.loadTimelinePosts(1);\r\n\t\t\t}\r\n\r\n\t\t\tthis.loadTimelineTags();\r\n\t\t}\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n\r\n\tloadTimelinePosts(currentPage: number): void {\r\n\t\tif (!this.fetchingResult) {\r\n\t\t\tthis.fetchingResult = true;\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.timelineService.getTimelinePosts(currentPage, this.resultSize).subscribe({\r\n\t\t\t\t\tnext: (postResponseList: PostResponse[]) => {\r\n\t\t\t\t\t\tif (postResponseList.length === 0 && currentPage === 1) this.noPost = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tpostResponseList.forEach(pR => this.timelinePostResponseList.push(pR));\r\n\r\n\t\t\t\t\t\tif (postResponseList.length > 0) {\r\n\t\t\t\t\t\t\tthis.hasMoreResult = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.hasMoreResult = false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.resultPage++;\r\n\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t\tthis.loadingTimelinePostsInitially = false;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tloadTaggedPosts(tagName: string, currentPage: number): void {\r\n\t\tif (!this.fetchingResult) {\r\n\t\t\tthis.fetchingResult = true;\r\n\t\t\tthis.subscriptions.push(\r\n\t\t\t\tthis.postService.getPostsByTag(tagName, currentPage, this.resultSize).subscribe({\r\n\t\t\t\t\tnext: (postResponseList: PostResponse[]) => {\r\n\t\t\t\t\t\tif (postResponseList.length === 0 && currentPage === 1) this.noPost = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tpostResponseList.forEach(pR => this.timelinePostResponseList.push(pR));\r\n\t\t\t\t\t\tif (postResponseList.length > 0) {\r\n\t\t\t\t\t\t\tthis.hasMoreResult = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.hasMoreResult = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.resultPage++;\r\n\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tloadTimelineTags(): void {\r\n\t\tthis.fetchingResult = true;\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.timelineService.getTimelineTags().subscribe({\r\n\t\t\t\tnext: (tagList: Tag[]) => {\r\n\t\t\t\t\ttagList.forEach(t => this.timelineTagList.push(t));\r\n\t\t\t\t\tthis.loadingTimelineTagsInitially = false;\r\n\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t},\r\n\t\t\t\terror: (errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\tthis.matSnackbar.openFromComponent(SnackbarComponent, {\r\n\t\t\t\t\t\tdata: AppConstants.snackbarErrorContent,\r\n\t\t\t\t\t\tpanelClass: ['bg-danger'],\r\n\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.fetchingResult = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n","<div class=\"text-center fully-centered\" *ngIf=\"loadingTimelinePostsInitially || loadingTimelineTagsInitially\">\r\n\t<mat-spinner style=\"zoom: 0.5;\" class=\"text-center ms-auto me-auto\"></mat-spinner>\r\n</div>\r\n\r\n<div style=\"margin-top: 100px\" *ngIf=\"!loadingTimelinePostsInitially && !loadingTimelineTagsInitially\">\r\n\t<div class=\"container\">\r\n\t\t<div class=\"row justify-content-center mt-5\">\r\n\t\t\t<div class=\"col-4\">\r\n\t\t\t\t<div class=\"profile-sidebar position-sticky bg-white rounded mat-elevation-z3 p-3\" style=\"top: 64px;\">\r\n\t\t\t\t\t<div *ngIf=\"timelineTagList.length > 0\">\r\n\t\t\t\t\t\t<h2 class=\"mat-h2\">Most Used Tags</h2>\r\n\t\t\t\t\t\t<a class=\"d-block p-3 text-decoration-none fw-500 border border-1 border-start-0 border-end-0\"\r\n\t\t\t\t\t\t style=\" font-size: 14px;\"\r\n\t\t\t\t\t\t *ngFor=\"let tag of timelineTagList; let last = last;\" href=\"/posts/tags/{{ tag.name }}\" [ngClass]=\"last ? '' : 'border-bottom-0'\">\r\n\t\t\t\t\t\t\t#{{ tag.name }} <span class=\"badge rounded-pill text-dark float-end\" style=\"background-color: rgba(0,0,0,0.15);\">{{ tag.tagUseCounter }}</span>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"timelineTagList.length === 0\">\r\n\t\t\t\t\t\t<h2 class=\"mat-h2 m-0 text-center\">No Tags Found</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"col-6\">\r\n\t\t\t\t<h3 class=\"mat-h3 fw-500\" *ngIf=\"isTaggedPostPage\">Posts with tag <i>#{{ targetTagName }}</i></h3>\r\n\r\n\t\t\t\t<div class=\"timeline-posts\">\r\n\t\t\t\t\t<p class=\"fw-500 text-center\" *ngIf=\"noPost\">No Post Found</p>\r\n\t\t\t\t\t<app-post *ngFor=\"let postResponse of timelinePostResponseList\" id=\"{{'profilePost' + postResponse.post.id}}\" [postResponse]=\"postResponse\" [isDetailedPost]=\"false\"></app-post>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"text-center mb-4\">\r\n\t\t\t\t\t<mat-spinner style=\"transform: scale(0.3);\" class=\"text-center ms-auto me-auto\" *ngIf=\"fetchingResult\"></mat-spinner>\r\n\t\t\t\t\t<button mat-raised-button color=\"primary\" class=\"mat-btn-lg rounded-pill\" *ngIf=\"hasMoreResult && !fetchingResult && !isTaggedPostPage\" (click)=\"loadTimelinePosts(resultPage)\">Load More</button>\r\n\t\t\t\t\t<button mat-raised-button color=\"primary\" class=\"mat-btn-lg rounded-pill\" *ngIf=\"hasMoreResult && !fetchingResult && isTaggedPostPage\" (click)=\"loadTaggedPosts(targetTagName, resultPage)\">Load More</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from 'src/app/common/app-constants';\r\nimport { UserService } from 'src/app/service/user.service';\r\n\r\n@Component({\r\n\tselector: 'app-verify-email',\r\n\ttemplateUrl: './verify-email.component.html',\r\n\tstyleUrls: ['./verify-email.component.css']\r\n})\r\nexport class VerifyEmailComponent implements OnInit, OnDestroy {\r\n\ttoken: string;\r\n\tprivate jwtService = new JwtHelperService();\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate userService: UserService,\r\n\t\tprivate router: Router,\r\n\t\tprivate route: ActivatedRoute) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.token = this.route.snapshot.paramMap.get('token');\r\n\r\n\t\tif (this.token !== null) {\r\n\t\t\tif (!this.jwtService.isTokenExpired(this.token)) {\r\n\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\tthis.userService.verifyEmail(this.token).subscribe(\r\n\t\t\t\t\t\t(response: HttpResponse<any>) => {\r\n\t\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageTypeLabel, AppConstants.successLabel);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageHeaderLabel, AppConstants.emailVerifySuccessHeader);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageDetailLabel, AppConstants.emailVerifySuccessDetail);\r\n\t\t\t\t\t\t\tthis.router.navigateByUrl('/message');\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(errorResponse: HttpErrorResponse) => {\r\n\t\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageTypeLabel, AppConstants.errorLabel);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageHeaderLabel, AppConstants.tokenErrorHeader);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(AppConstants.messageDetailLabel, AppConstants.tokenErrorDetail);\r\n\t\t\t\t\t\t\tthis.router.navigateByUrl('/message');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AppConstants.messageTypeLabel, AppConstants.errorLabel);\r\n\t\t\t\tlocalStorage.setItem(AppConstants.messageHeaderLabel, AppConstants.tokenErrorHeader);\r\n\t\t\t\tlocalStorage.setItem(AppConstants.messageDetailLabel, AppConstants.tokenErrorDetail);\r\n\t\t\t\tthis.router.navigateByUrl('/message');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.router.navigateByUrl('/');\r\n\t\t}\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sub => sub.unsubscribe());\r\n\t}\r\n}\r\n","<div class=\"mt-100 me-auto ms-auto\" style=\"width: 500px;\">\r\n\t<mat-card class=\"example-card\">\r\n\t\t<mat-card-title>Verifying</mat-card-title>\r\n\r\n\t\t<mat-card-content>\r\n\t\t\tPlease, wait while we verity your email address.\r\n\t\t</mat-card-content>\r\n\t\t\r\n\t\t<mat-card-footer>\r\n\t\t\t<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n\t\t</mat-card-footer>\r\n\t</mat-card>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n\tselector: 'app-view-photo-dialog',\r\n\ttemplateUrl: './view-photo-dialog.component.html',\r\n\tstyleUrls: ['./view-photo-dialog.component.css']\r\n})\r\nexport class ViewPhotoDialogComponent implements OnInit {\r\n\r\n\tconstructor(@Inject(MAT_DIALOG_DATA) public dataUrl: string) { }\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n}\r\n","<mat-dialog-content>\r\n\t<img src=\"{{ dataUrl }}\" style=\"max-width: 100%; max-height: 500px;\">\r\n</mat-dialog-content>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n\tselector: 'app-waiting-dialog',\r\n\ttemplateUrl: './waiting-dialog.component.html',\r\n\tstyleUrls: ['./waiting-dialog.component.css']\r\n})\r\nexport class WaitingDialogComponent implements OnInit {\r\n\r\n\tconstructor(@Inject(MAT_DIALOG_DATA) public dataHeader: string) { }\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n}\r\n","<mat-dialog-content class=\"text-center\">\r\n\t<mat-spinner style=\"margin: -25px auto 0; transform: scale(0.3);\"></mat-spinner>\r\n\r\n\t<h2 class=\"mat-h2 m-0\">\r\n\t\t{{ dataHeader }}\r\n\t</h2>\r\n</mat-dialog-content>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from '../service/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\tconstructor(private authService: AuthService, private router: Router) {}\r\n\r\n\tcanActivate(\r\n\t\troute: ActivatedRouteSnapshot,\r\n\t\tstate: RouterStateSnapshot): boolean {\r\n\t\treturn this.isUserLoggedIn();\r\n\t}\r\n\r\n\tpublic isUserLoggedIn(): boolean {\r\n\t\tif (this.authService.isUserLoggedIn()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tthis.router.navigateByUrl('/login');\r\n\t\treturn false;\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthService } from '../service/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\tprivate host = environment.apiUrl;\r\n\r\n\tconstructor(private authService: AuthService) { }\r\n\r\n\tintercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n\t\tif (request.url.includes(`${this.host}/signup`)) {\r\n\t\t\treturn next.handle(request);\r\n\t\t}\r\n\r\n\t\tif (request.url.includes(`${this.host}/login`)) {\r\n\t\t\treturn next.handle(request);\r\n\t\t}\r\n\r\n\t\tif (request.url.includes(`${this.host}/verify-email`)) {\r\n\t\t\treturn next.handle(request);\r\n\t\t}\r\n\r\n\t\tif (request.url.includes(`${this.host}/forgot-password`)) {\r\n\t\t\treturn next.handle(request);\r\n\t\t}\r\n\r\n\t\tif (request.url.includes(`${this.host}/reset-password`)) {\r\n\t\t\treturn next.handle(request);\r\n\t\t}\r\n\r\n\t\tconst authToken = this.authService.getAuthTokenFromCache();\r\n\t\tconst newRequest = request.clone({setHeaders: {Authorization: `Bearer ${authToken}`}});\r\n\t\treturn next.handle(newRequest);\r\n\t}\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport class Comment {\r\n    id: number;\r\n    content: string;\r\n    likeCount: number;\r\n    dateCreated: string;\r\n    dateLastModified: string;\r\n\tauthor: User;\r\n}\r\n","import { Tag } from \"./tag\";\r\nimport { User } from \"./user\";\r\n\r\nexport class Post {\r\n\tid: number;\r\n\tcontent: string;\r\n\tpostPhoto: string;\r\n\tlikeCount: number;\r\n\tcommentCount: number;\r\n\tshareCount: number;\r\n\tdateCreated: string;\r\n\tdateLastModified: string;\r\n\tisTypeShare: boolean;\r\n\tauthor: User;\r\n\tsharedPost: Post;\r\n\tpostTags: Tag[]\r\n}\r\n","export class ResetPassword {\r\n    password: string;\r\n    passwordRepeat: string;\r\n}","export class UpdateUserEmail {\r\n\temail: string;\r\n\tpassword: string;\r\n}","export class UpdateUserInfo {\r\n\tfirstName: string;\r\n    lastName: string;\r\n    gender: string;\r\n    intro: string;\r\n    hometown: string;\r\n    currentCity: string;\r\n    eduInstitution: string;\r\n    workplace: string;\r\n    countryName: string;\r\n    birthDate: string;\r\n}","export class UpdateUserPassword {\r\n\tpassword: string;\r\n\tpasswordRepeat: string;\r\n\toldPassword: string;\r\n}","export class UserLogin {\r\n\temail: string;\r\n\tpassword: string;\r\n}","export class UserSignup {\r\n    email: string;\r\n    password: string;\r\n    passwordRepeat: string;\r\n\tfirstName: string;\r\n\tlastName: string;\r\n}","import { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../model/user';\r\nimport { UserLogin } from '../model/user-login';\r\nimport { UserSignup } from '../model/user-signup';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\tlogoutSubject = new Subject<boolean>();\r\n\tloginSubject = new Subject<User>();\r\n\tprivate host = environment.apiUrl;\r\n\tprivate authToken: string;\r\n\tprivate authUser: User;\r\n\tprivate principal: string;\r\n\tprivate jwtService = new JwtHelperService();\r\n\r\n\tconstructor(private httpClient: HttpClient) { }\r\n\r\n\tsignup(userSignup: UserSignup): Observable<HttpResponse<any> | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<HttpResponse<any> | HttpErrorResponse>(`${this.host}/signup`, userSignup);\r\n\t}\r\n\r\n\tlogin(userLogin: UserLogin): Observable<HttpResponse<User> | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<User>(`${this.host}/login`, userLogin, { observe: 'response' });\r\n\t}\r\n\r\n\tlogout(): void {\r\n\t\tthis.authToken = null;\r\n\t\tthis.authUser = null;\r\n\t\tthis.principal = null;\r\n\t\tlocalStorage.removeItem('authUser');\r\n\t\tlocalStorage.removeItem('authToken');\r\n\t\tthis.logoutSubject.next(true);\r\n\t}\r\n\r\n\tstoreTokenInCache(authToken: string): void {\r\n\t\tif (authToken != null && authToken != '') {\r\n\t\t\tthis.authToken = authToken;\r\n\t\t\tlocalStorage.setItem('authToken', authToken);\r\n\t\t}\r\n\t}\r\n\r\n\tloadAuthTokenFromCache(): void {\r\n\t\tthis.authToken = localStorage.getItem('authToken');\r\n\t}\r\n\r\n\tgetAuthTokenFromCache(): string {\r\n\t\treturn localStorage.getItem('authToken');\r\n\t}\r\n\r\n\tstoreAuthUserInCache(authUser: User): void {\r\n\t\tif (authUser != null) {\r\n\t\t\tthis.authUser = authUser;\r\n\t\t\tlocalStorage.setItem('authUser', JSON.stringify(authUser));\r\n\t\t}\r\n\t\tthis.loginSubject.next(authUser);\r\n\t}\r\n\r\n\tgetAuthUserFromCache(): User {\r\n\t\treturn JSON.parse(localStorage.getItem('authUser'));\r\n\t}\r\n\r\n\tgetAuthUserId(): number {\r\n\t\treturn this.getAuthUserFromCache().id;\r\n\t}\r\n\r\n\tisUserLoggedIn(): boolean {\r\n\t\tthis.loadAuthTokenFromCache();\r\n\r\n\t\tif (this.authToken != null && this.authToken != '') {\r\n\t\t\tif (this.jwtService.decodeToken(this.authToken).sub != null || '') {\r\n\t\t\t\tif (!this.jwtService.isTokenExpired(this.authToken)) {\r\n\t\t\t\t\tthis.principal = this.jwtService.decodeToken(this.authToken).sub;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.logout();\r\n\t\treturn false;\r\n\t}\r\n}\r\n","import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../model/user';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class CommentService {\r\n\tprivate host = environment.apiUrl;\r\n\r\n\tconstructor(private httpClient: HttpClient) { }\r\n\r\n\tlikeComment(commentId: number): Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/posts/comments/${commentId}/like`, null);\r\n\t}\r\n\r\n\tunlikeComment(commentId: number): Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/posts/comments/${commentId}/unlike`, null);\r\n\t}\r\n\r\n\tdeleteComment(postId: number, commentId: number): Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/posts/${postId}/comments/${commentId}/delete`, null);\r\n\t}\r\n\r\n\tgetCommentLikes(commentId: number, page: number, size: number): Observable<User[] | HttpErrorResponse> {\r\n\t\tconst reqParams = new HttpParams().set('page', page).set('size', size);\r\n\t\treturn this.httpClient.get<User[] | HttpErrorResponse>(`${this.host}/posts/comments/${commentId}/likes`, { params: reqParams });\r\n\t}\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Country } from '../model/country';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class CountryService {\r\n\tprivate host = environment.apiUrl;\r\n\r\n\tconstructor(private httpClient: HttpClient) { }\r\n\r\n\tgetCountryList(): Observable<Country[] | HttpErrorResponse> {\r\n\t\treturn this.httpClient.get<Country[] | HttpErrorResponse>(`${this.host}/countries`);\r\n\t}\r\n}\r\n","import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Notification } from '../model/notification';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n\tprivate host = environment.apiUrl;\r\n\r\n\tconstructor(private httpClient: HttpClient) { }\r\n\r\n\tgetNotifications(page: number, size: number): Observable<Notification[] | HttpErrorResponse> {\r\n\t\tconst reqParams = new HttpParams().set('page', page).set('size', size);\r\n\t\treturn this.httpClient.get<Notification[] | HttpErrorResponse>(`${this.host}/notifications`, { params: reqParams });\r\n\t}\r\n\r\n\tmarkAllSeen():  Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/notifications/mark-seen`, null);\r\n\t}\r\n\r\n\tmarkAsRead(notificationId: number):  Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/notifications/${notificationId}/mark-read`, null);\r\n\t}\r\n\r\n\tmarkAllRead():  Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/notifications/mark-read`, null);\r\n\t}\r\n}\r\n","import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CommentResponse } from '../model/comment-response';\r\nimport { Post } from '../model/post';\r\nimport { PostResponse } from '../model/post-response';\r\nimport { User } from '../model/user';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class PostService {\r\n\tauthUser: User;\r\n\tprivate host = environment.apiUrl;\r\n\r\n\tconstructor(private httpClient: HttpClient) { }\r\n\r\n\tcreateNewPost(content: string, postPhoto: File, postTags: any[]): Observable<Post | HttpErrorResponse> {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('content', content);\r\n\t\tformData.append('postPhoto', postPhoto);\r\n\t\tformData.append('postTags', JSON.stringify(postTags));\r\n\t\treturn this.httpClient.post<Post | HttpErrorResponse>(`${this.host}/posts/create`, formData);\r\n\t}\r\n\r\n\tupdatePost(postId: number, content: string, postPhoto: File, postTags: any[]): Observable<Post | HttpErrorResponse> {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('content', content);\r\n\t\tformData.append('postPhoto', postPhoto);\r\n\t\tformData.append('postTags', JSON.stringify(postTags));\r\n\t\treturn this.httpClient.post<Post | HttpErrorResponse>(`${this.host}/posts/${postId}/update`, formData);\r\n\t}\r\n\r\n\tdeletePostPhoto(postId: number): Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/posts/${postId}/photo/delete`, null);\r\n\t}\r\n\r\n\tdeletePost(postId: number, isTypeShare: boolean): Observable<any | HttpErrorResponse> {\r\n\t\tif (isTypeShare) {\r\n\t\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/posts/${postId}/share/delete`, null);\r\n\t\t} else {\r\n\t\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/posts/${postId}/delete`, null);\r\n\t\t}\r\n\t}\r\n\r\n\tgetPostById(postId: number): Observable<PostResponse | HttpErrorResponse> {\r\n\t\treturn this.httpClient.get<PostResponse | HttpErrorResponse>(`${this.host}/posts/${postId}`);\r\n\t}\r\n\r\n\tgetPostLikes(postId: number, page: number, size: number): Observable<User[] | HttpErrorResponse> {\r\n\t\tconst reqParams = new HttpParams().set('page', page).set('size', size);\r\n\t\treturn this.httpClient.get<User[] | HttpErrorResponse>(`${this.host}/posts/${postId}/likes`, { params: reqParams });\r\n\t}\r\n\r\n\tgetPostComments(postId: number, page: number, size: number): Observable<CommentResponse[] | HttpErrorResponse> {\r\n\t\tconst reqParams = new HttpParams().set('page', page).set('size', size);\r\n\t\treturn this.httpClient.get<CommentResponse[] | HttpErrorResponse>(`${this.host}/posts/${postId}/comments`, { params: reqParams });\r\n\t}\r\n\r\n\tgetPostShares(postId: number, page: number, size: number): Observable<PostResponse[] | HttpErrorResponse> {\r\n\t\tconst reqParams = new HttpParams().set('page', page).set('size', size);\r\n\t\treturn this.httpClient.get<PostResponse[] | HttpErrorResponse>(`${this.host}/posts/${postId}/shares`, { params: reqParams });\r\n\t}\r\n\r\n\tlikePost(postId: number): Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/posts/${postId}/like`, null);\r\n\t}\r\n\r\n\tunlikePost(postId: number): Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/posts/${postId}/unlike`, null);\r\n\t}\r\n\r\n\tcreatePostComment(postId: number, content: string): Observable<CommentResponse | HttpErrorResponse> {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('content', content);\r\n\t\treturn this.httpClient.post<CommentResponse | HttpErrorResponse>(`${this.host}/posts/${postId}/comments/create`, formData);\r\n\t}\r\n\r\n\tlikePostComment(commentId: number): Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/posts/comments/${commentId}/like`, null);\r\n\t}\r\n\r\n\tcreatePostShare(postId: number, content: string): Observable<Post | HttpErrorResponse> {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('content', content);\r\n\t\treturn this.httpClient.post<Post | HttpErrorResponse>(`${this.host}/posts/${postId}/share/create`, formData);\r\n\t}\r\n\r\n\tgetPostsByTag(tagName: string, page: number, size: number): Observable<PostResponse[] | HttpErrorResponse> {\r\n\t\tconst reqParams = new HttpParams().set('page', page).set('size', size);\r\n\t\treturn this.httpClient.get<PostResponse[] | HttpErrorResponse>(`${this.host}/posts/tags/${tagName}`, { params: reqParams });\r\n\t}\r\n}\r\n","import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PostResponse } from '../model/post-response';\r\nimport { Tag } from '../model/tag';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class TimelineService {\r\n\tprivate host = environment.apiUrl;\r\n\r\n\tconstructor(private httpClient: HttpClient) { }\r\n\r\n\tgetTimelinePosts(page: number, size: number): Observable<PostResponse[] | HttpErrorResponse> {\r\n\t\tconst reqParams = new HttpParams().set('page', page).set('size', size);\r\n\t\treturn this.httpClient.get<PostResponse[] | HttpErrorResponse>(`${this.host}/`, { params: reqParams });\r\n\t}\r\n\r\n\tgetTimelineTags(): Observable<Tag[] | HttpErrorResponse> {\r\n\t\treturn this.httpClient.get<Tag[] | HttpErrorResponse>(`${this.host}/tags`);\r\n\t}\r\n}\r\n","import { HttpClient, HttpErrorResponse, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Post } from '../model/post';\r\nimport { PostResponse } from '../model/post-response';\r\nimport { ResetPassword } from '../model/reset-password';\r\nimport { UpdateUserEmail } from '../model/update-user-email';\r\nimport { UpdateUserInfo } from '../model/update-user-info';\r\nimport { UpdateUserPassword } from '../model/update-user-password';\r\nimport { User } from '../model/user';\r\nimport { UserResponse } from '../model/user-response';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class UserService {\r\n\tprivate host = environment.apiUrl;\r\n\tprivate jwtService = new JwtHelperService();\r\n\r\n\tconstructor(private httpClient: HttpClient) { }\r\n\r\n\tgetUserById(userId: number): Observable<UserResponse | HttpErrorResponse> {\r\n\t\treturn this.httpClient.get<UserResponse | HttpErrorResponse>(`${this.host}/users/${userId}`);\r\n\t}\r\n\r\n\tgetUserFollowingList(userId: number, page: number, size: number): Observable<UserResponse[] | HttpErrorResponse> {\r\n\t\tconst reqParams = new HttpParams().set('page', page).set('size', size);\r\n\t\treturn this.httpClient.get<UserResponse[] | HttpErrorResponse>(`${this.host}/users/${userId}/following`, { params: reqParams });\r\n\t}\r\n\r\n\tgetUserFollowerList(userId: number, page: number, size: number): Observable<UserResponse[] | HttpErrorResponse> {\r\n\t\tconst reqParams = new HttpParams().set('page', page).set('size', size);\r\n\t\treturn this.httpClient.get<UserResponse[] | HttpErrorResponse>(`${this.host}/users/${userId}/follower`, { params: reqParams });\r\n\t}\r\n\r\n\tgetUserPosts(userId: number, page: number, size: number): Observable<PostResponse[] | HttpErrorResponse> {\r\n\t\tconst reqParams = new HttpParams().set('page', page).set('size', size);\r\n\t\treturn this.httpClient.get<PostResponse[] | HttpErrorResponse>(`${this.host}/users/${userId}/posts`, { params: reqParams });\r\n\t}\r\n\r\n\tverifyEmail(token: string): Observable<HttpResponse<any> | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<HttpResponse<any> | HttpErrorResponse>(`${this.host}/verify-email/${token}`, null);\r\n\t}\r\n\r\n\tupdateUserInfo(updateUserInfo: UpdateUserInfo): Observable<User | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<User | HttpErrorResponse>(`${this.host}/account/update/info`, updateUserInfo);\r\n\t}\r\n\r\n\tupdateUserEmail(updateUserEmail: UpdateUserEmail): Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/account/update/email`, updateUserEmail);\r\n\t}\r\n\r\n\tupdateUserPassword(updateUserPassword: UpdateUserPassword): Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/account/update/password`, updateUserPassword);\r\n\t}\r\n\r\n\tupdateProfilePhoto(profilePhoto: File): Observable<User | HttpErrorResponse> {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('profilePhoto', profilePhoto);\r\n\t\treturn this.httpClient.post<User | HttpErrorResponse>(`${this.host}/account/update/profile-photo`, formData);\r\n\t}\r\n\r\n\tupdateCoverPhoto(coverPhoto: File): Observable<User | HttpErrorResponse> {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('coverPhoto', coverPhoto);\r\n\t\treturn this.httpClient.post<User | HttpErrorResponse>(`${this.host}/account/update/cover-photo`, formData);\r\n\t}\r\n\r\n\tfollowUser(userId: number): Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/account/follow/${userId}`, null);\r\n\t}\r\n\r\n\tunfollowUser(userId: number): Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/account/unfollow/${userId}`, null);\r\n\t}\r\n\r\n\tgetUserSearchResult(key: string, page: number, size: number): Observable<UserResponse[] | HttpErrorResponse> {\r\n\t\tconst reqParams = new HttpParams().set('key', key).set('page', page).set('size', size);\r\n\t\treturn this.httpClient.get<UserResponse[] | HttpErrorResponse>(`${this.host}/users/search`, { params: reqParams });\r\n\t}\r\n\r\n\tforgotPassword(email: string): Observable<any | HttpErrorResponse> {\r\n\t\tconst reqParams = new HttpParams().set('email', email);\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/forgot-password`, null, { params: reqParams });\r\n\t}\r\n\r\n\tresetPassword(token: string, resetPassword: ResetPassword): Observable<any | HttpErrorResponse> {\r\n\t\treturn this.httpClient.post<any | HttpErrorResponse>(`${this.host}/reset-password/${token}`, resetPassword);\r\n\t}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n\tproduction: false,\r\n\tapiUrl: 'http://localhost:8080/api/v1',\r\n\tdefaultProfilePhotoUrl: 'http://localhost:4200/assets/images/avatar.jpg',\r\n\tdefaultCoverPhotoUrl: 'http://localhost:4200/assets/images/cover.jpg'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","var map = {\n\t\"./af\": 8685,\n\t\"./af.js\": 8685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 2614,\n\t\"./ar-kw.js\": 2614,\n\t\"./ar-ly\": 8630,\n\t\"./ar-ly.js\": 8630,\n\t\"./ar-ma\": 8674,\n\t\"./ar-ma.js\": 8674,\n\t\"./ar-sa\": 9032,\n\t\"./ar-sa.js\": 9032,\n\t\"./ar-tn\": 4730,\n\t\"./ar-tn.js\": 4730,\n\t\"./ar.js\": 254,\n\t\"./az\": 3052,\n\t\"./az.js\": 3052,\n\t\"./be\": 150,\n\t\"./be.js\": 150,\n\t\"./bg\": 3069,\n\t\"./bg.js\": 3069,\n\t\"./bm\": 3466,\n\t\"./bm.js\": 3466,\n\t\"./bn\": 8516,\n\t\"./bn-bd\": 557,\n\t\"./bn-bd.js\": 557,\n\t\"./bn.js\": 8516,\n\t\"./bo\": 6273,\n\t\"./bo.js\": 6273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 9815,\n\t\"./bs.js\": 9815,\n\t\"./ca\": 3331,\n\t\"./ca.js\": 3331,\n\t\"./cs\": 1320,\n\t\"./cs.js\": 1320,\n\t\"./cv\": 2219,\n\t\"./cv.js\": 2219,\n\t\"./cy\": 8266,\n\t\"./cy.js\": 8266,\n\t\"./da\": 6427,\n\t\"./da.js\": 6427,\n\t\"./de\": 7435,\n\t\"./de-at\": 2871,\n\t\"./de-at.js\": 2871,\n\t\"./de-ch\": 2994,\n\t\"./de-ch.js\": 2994,\n\t\"./de.js\": 7435,\n\t\"./dv\": 2357,\n\t\"./dv.js\": 2357,\n\t\"./el\": 5649,\n\t\"./el.js\": 5649,\n\t\"./en-au\": 9961,\n\t\"./en-au.js\": 9961,\n\t\"./en-ca\": 9878,\n\t\"./en-ca.js\": 9878,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 864,\n\t\"./en-ie.js\": 864,\n\t\"./en-il\": 1579,\n\t\"./en-il.js\": 1579,\n\t\"./en-in\": 940,\n\t\"./en-in.js\": 940,\n\t\"./en-nz\": 6181,\n\t\"./en-nz.js\": 6181,\n\t\"./en-sg\": 4301,\n\t\"./en-sg.js\": 4301,\n\t\"./eo\": 5291,\n\t\"./eo.js\": 5291,\n\t\"./es\": 4529,\n\t\"./es-do\": 3764,\n\t\"./es-do.js\": 3764,\n\t\"./es-mx\": 2584,\n\t\"./es-mx.js\": 2584,\n\t\"./es-us\": 3425,\n\t\"./es-us.js\": 3425,\n\t\"./es.js\": 4529,\n\t\"./et\": 5203,\n\t\"./et.js\": 5203,\n\t\"./eu\": 678,\n\t\"./eu.js\": 678,\n\t\"./fa\": 3483,\n\t\"./fa.js\": 3483,\n\t\"./fi\": 6262,\n\t\"./fi.js\": 6262,\n\t\"./fil\": 2521,\n\t\"./fil.js\": 2521,\n\t\"./fo\": 4555,\n\t\"./fo.js\": 4555,\n\t\"./fr\": 3131,\n\t\"./fr-ca\": 8239,\n\t\"./fr-ca.js\": 8239,\n\t\"./fr-ch\": 1702,\n\t\"./fr-ch.js\": 1702,\n\t\"./fr.js\": 3131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 3821,\n\t\"./ga.js\": 3821,\n\t\"./gd\": 1753,\n\t\"./gd.js\": 1753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 2762,\n\t\"./gom-deva.js\": 2762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 2809,\n\t\"./gu.js\": 2809,\n\t\"./he\": 5402,\n\t\"./he.js\": 5402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 410,\n\t\"./hr.js\": 410,\n\t\"./hu\": 8288,\n\t\"./hu.js\": 8288,\n\t\"./hy-am\": 7928,\n\t\"./hy-am.js\": 7928,\n\t\"./id\": 1334,\n\t\"./id.js\": 1334,\n\t\"./is\": 6959,\n\t\"./is.js\": 6959,\n\t\"./it\": 4864,\n\t\"./it-ch\": 1124,\n\t\"./it-ch.js\": 1124,\n\t\"./it.js\": 4864,\n\t\"./ja\": 6141,\n\t\"./ja.js\": 6141,\n\t\"./jv\": 9187,\n\t\"./jv.js\": 9187,\n\t\"./ka\": 2136,\n\t\"./ka.js\": 2136,\n\t\"./kk\": 4332,\n\t\"./kk.js\": 4332,\n\t\"./km\": 8607,\n\t\"./km.js\": 8607,\n\t\"./kn\": 4305,\n\t\"./kn.js\": 4305,\n\t\"./ko\": 234,\n\t\"./ko.js\": 234,\n\t\"./ku\": 6003,\n\t\"./ku.js\": 6003,\n\t\"./ky\": 5061,\n\t\"./ky.js\": 5061,\n\t\"./lb\": 2786,\n\t\"./lb.js\": 2786,\n\t\"./lo\": 6183,\n\t\"./lo.js\": 6183,\n\t\"./lt\": 29,\n\t\"./lt.js\": 29,\n\t\"./lv\": 4169,\n\t\"./lv.js\": 4169,\n\t\"./me\": 8577,\n\t\"./me.js\": 8577,\n\t\"./mi\": 8177,\n\t\"./mi.js\": 8177,\n\t\"./mk\": 337,\n\t\"./mk.js\": 337,\n\t\"./ml\": 5260,\n\t\"./ml.js\": 5260,\n\t\"./mn\": 2325,\n\t\"./mn.js\": 2325,\n\t\"./mr\": 4695,\n\t\"./mr.js\": 4695,\n\t\"./ms\": 5334,\n\t\"./ms-my\": 7151,\n\t\"./ms-my.js\": 7151,\n\t\"./ms.js\": 5334,\n\t\"./mt\": 3570,\n\t\"./mt.js\": 3570,\n\t\"./my\": 7963,\n\t\"./my.js\": 7963,\n\t\"./nb\": 8028,\n\t\"./nb.js\": 8028,\n\t\"./ne\": 6638,\n\t\"./ne.js\": 6638,\n\t\"./nl\": 302,\n\t\"./nl-be\": 6782,\n\t\"./nl-be.js\": 6782,\n\t\"./nl.js\": 302,\n\t\"./nn\": 3501,\n\t\"./nn.js\": 3501,\n\t\"./oc-lnc\": 563,\n\t\"./oc-lnc.js\": 563,\n\t\"./pa-in\": 869,\n\t\"./pa-in.js\": 869,\n\t\"./pl\": 5302,\n\t\"./pl.js\": 5302,\n\t\"./pt\": 9687,\n\t\"./pt-br\": 4884,\n\t\"./pt-br.js\": 4884,\n\t\"./pt.js\": 9687,\n\t\"./ro\": 9107,\n\t\"./ro.js\": 9107,\n\t\"./ru\": 3627,\n\t\"./ru.js\": 3627,\n\t\"./sd\": 355,\n\t\"./sd.js\": 355,\n\t\"./se\": 3427,\n\t\"./se.js\": 3427,\n\t\"./si\": 1848,\n\t\"./si.js\": 1848,\n\t\"./sk\": 4590,\n\t\"./sk.js\": 4590,\n\t\"./sl\": 184,\n\t\"./sl.js\": 184,\n\t\"./sq\": 6361,\n\t\"./sq.js\": 6361,\n\t\"./sr\": 8965,\n\t\"./sr-cyrl\": 1287,\n\t\"./sr-cyrl.js\": 1287,\n\t\"./sr.js\": 8965,\n\t\"./ss\": 5456,\n\t\"./ss.js\": 5456,\n\t\"./sv\": 451,\n\t\"./sv.js\": 451,\n\t\"./sw\": 7558,\n\t\"./sw.js\": 7558,\n\t\"./ta\": 1356,\n\t\"./ta.js\": 1356,\n\t\"./te\": 3693,\n\t\"./te.js\": 3693,\n\t\"./tet\": 1243,\n\t\"./tet.js\": 1243,\n\t\"./tg\": 2500,\n\t\"./tg.js\": 2500,\n\t\"./th\": 5768,\n\t\"./th.js\": 5768,\n\t\"./tk\": 7761,\n\t\"./tk.js\": 7761,\n\t\"./tl-ph\": 5780,\n\t\"./tl-ph.js\": 5780,\n\t\"./tlh\": 9590,\n\t\"./tlh.js\": 9590,\n\t\"./tr\": 3807,\n\t\"./tr.js\": 3807,\n\t\"./tzl\": 3857,\n\t\"./tzl.js\": 3857,\n\t\"./tzm\": 654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 654,\n\t\"./ug-cn\": 845,\n\t\"./ug-cn.js\": 845,\n\t\"./uk\": 9232,\n\t\"./uk.js\": 9232,\n\t\"./ur\": 7052,\n\t\"./ur.js\": 7052,\n\t\"./uz\": 7967,\n\t\"./uz-latn\": 2233,\n\t\"./uz-latn.js\": 2233,\n\t\"./uz.js\": 7967,\n\t\"./vi\": 8615,\n\t\"./vi.js\": 8615,\n\t\"./x-pseudo\": 2320,\n\t\"./x-pseudo.js\": 2320,\n\t\"./yo\": 1313,\n\t\"./yo.js\": 1313,\n\t\"./zh-cn\": 4490,\n\t\"./zh-cn.js\": 4490,\n\t\"./zh-hk\": 5910,\n\t\"./zh-hk.js\": 5910,\n\t\"./zh-mo\": 8262,\n\t\"./zh-mo.js\": 8262,\n\t\"./zh-tw\": 4223,\n\t\"./zh-tw.js\": 4223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6700;"],"names":[],"sourceRoot":"webpack:///"}